{"version":3,"file":"vendors-node_modules_eclipse-glsp_theia-integration_lib_browser_glsp-theia-container-module_j-a3229c.js","mappings":"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","sources":["webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/copy-paste-context-menu-contribution.ts?","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-diagram-manager.ts?","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/diagram/glsp-layout-commands.ts?","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/glsp-theia-container-module.ts?","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/index.ts?","webpack:///../node_modules/@eclipse-glsp/theia-integration/src/browser/theia-navigate-to-marker-contribution.ts?"],"sourcesContent":["/********************************************************************************\n * Copyright (c) 2020-2023 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { bindAsService } from '@eclipse-glsp/client';\nimport { MenuContribution, MenuModelRegistry } from '@theia/core';\nimport { CommonCommands } from '@theia/core/lib/browser';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { ContainerContext } from './glsp-theia-container-module';\nimport { TheiaGLSPContextMenu } from './theia-glsp-context-menu-service';\n\nexport function registerCopyPasteContextMenu(context: Omit<ContainerContext, 'unbind' | 'rebind'>): void {\n    if (!context.isBound(CopyPasteMenuContribution)) {\n        bindAsService(context, MenuContribution, CopyPasteMenuContribution);\n    }\n}\n\n@injectable()\nexport class CopyPasteMenuContribution implements MenuContribution {\n    static readonly COPY_PASTE = TheiaGLSPContextMenu.CONTEXT_MENU.concat('copy-paste');\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerMenuAction(CopyPasteMenuContribution.COPY_PASTE, {\n            commandId: CommonCommands.CUT.id,\n            order: '0'\n        });\n        menus.registerMenuAction(CopyPasteMenuContribution.COPY_PASTE, {\n            commandId: CommonCommands.COPY.id,\n            order: '1'\n        });\n        menus.registerMenuAction(CopyPasteMenuContribution.COPY_PASTE, {\n            commandId: CommonCommands.PASTE.id,\n            order: '2'\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2018-2025 TypeFox and others.\n * Modifications: (c) 2019-2024 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n// based on: https://github.com/eclipse-sprotty/sprotty-theia/blob/v0.12.0/src/theia/diagram-manager.ts\n\nimport { codiconCSSString, EditMode, IDiagramOptions } from '@eclipse-glsp/client';\nimport {\n    ApplicationShell,\n    FrontendApplicationContribution,\n    OpenHandler,\n    OpenWithHandler,\n    OpenWithService,\n    WidgetFactory,\n    WidgetOpenerOptions,\n    WidgetOpenHandler\n} from '@theia/core/lib/browser';\nimport URI from '@theia/core/lib/common/uri';\nimport { inject, injectable, interfaces, postConstruct } from '@theia/core/shared/inversify';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { DiagramServiceProvider } from '../diagram-service-provider';\nimport { TheiaOpenerOptionsNavigationService } from '../theia-opener-options-navigation-service';\nimport { DiagramConfiguration } from './glsp-diagram-configuration';\nimport { GLSPDiagramContextKeyService } from './glsp-diagram-context-key-service';\nimport { GLSPDiagramWidget, GLSPDiagramWidgetOptions } from './glsp-diagram-widget';\n\nexport function registerDiagramManager(\n    bind: interfaces.Bind,\n    diagramManagerServiceId: interfaces.ServiceIdentifier<GLSPDiagramManager>,\n    bindToSelf = true\n): void {\n    if (bindToSelf) {\n        bind(diagramManagerServiceId).toSelf().inSingletonScope();\n    }\n    bind(FrontendApplicationContribution).toService(diagramManagerServiceId);\n    bind(OpenHandler).toService(diagramManagerServiceId);\n    bind(WidgetFactory).toService(diagramManagerServiceId);\n}\n\n@injectable()\nexport abstract class GLSPDiagramManager extends WidgetOpenHandler<GLSPDiagramWidget> implements WidgetFactory, OpenWithHandler {\n    @inject(TheiaOpenerOptionsNavigationService)\n    protected readonly diagramNavigationService: TheiaOpenerOptionsNavigationService;\n\n    @inject(GLSPDiagramContextKeyService)\n    protected readonly contextKeyService: GLSPDiagramContextKeyService;\n\n    @inject(DiagramServiceProvider)\n    protected readonly diagramServiceProvider: DiagramServiceProvider;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(OpenWithService)\n    protected openWithService: OpenWithService;\n\n    abstract get fileExtensions(): string[];\n\n    abstract get diagramType(): string;\n\n    abstract get contributionId(): string;\n\n    protected widgetCount = 0;\n\n    protected registerOpenWithHandler = true;\n\n    @postConstruct()\n    protected override init(): void {\n        super.init();\n        if (this.registerOpenWithHandler) {\n            this.openWithService.registerHandler(this);\n        }\n    }\n\n    override async doOpen(widget: GLSPDiagramWidget, uri: URI, maybeOptions?: WidgetOpenerOptions): Promise<void> {\n        const options: WidgetOpenerOptions = {\n            mode: 'activate',\n            ...maybeOptions\n        };\n        if (!widget.isAttached) {\n            this.attachWidget(widget, options);\n        }\n        if (options.mode === 'activate') {\n            await widget.getSvgElement();\n            await this.shell.activateWidget(widget.id);\n        } else if (options.mode === 'reveal') {\n            await this.shell.revealWidget(widget.id);\n        }\n        if (this.handleNavigations(widget, options)) {\n            return;\n        }\n    }\n\n    protected attachWidget(widget: GLSPDiagramWidget, options?: WidgetOpenerOptions): void {\n        const currentEditor = this.editorManager.currentEditor;\n        const widgetOptions: ApplicationShell.WidgetOptions = {\n            area: 'main',\n            ...(options && options.widgetOptions ? options.widgetOptions : {})\n        };\n        if (!!currentEditor && currentEditor.editor.uri.toString(true) === widget.uri.toString(true)) {\n            widgetOptions.ref = currentEditor;\n            widgetOptions.mode =\n                options && options.widgetOptions && options.widgetOptions.mode ? options.widgetOptions.mode : 'open-to-right';\n        }\n        this.shell.addWidget(widget, widgetOptions);\n    }\n\n    protected handleNavigations(widget: GLSPDiagramWidget, options?: WidgetOpenerOptions): boolean {\n        const navigations = this.diagramNavigationService.determineNavigations(widget.uri.toString(true), options);\n        if (navigations.length > 0) {\n            widget.actionDispatcher.dispatchOnceModelInitialized(...navigations);\n            return true;\n        }\n        return false;\n    }\n\n    async createWidget(options?: any): Promise<GLSPDiagramWidget> {\n        if (GLSPDiagramWidgetOptions.is(options)) {\n            const config = this.getDiagramConfiguration(options);\n            const diagramOptions = this.createDiagramOptions(options);\n            const diContainer = config.createContainer(diagramOptions);\n            const diagramWidgetFactory = this.diagramServiceProvider.getDiagramWidgetFactory(this.diagramType);\n\n            const widget = diagramWidgetFactory?.create(options, diContainer);\n            widget.listenToFocusState(this.shell);\n            return widget;\n        }\n        throw Error('DiagramWidgetFactory needs DiagramWidgetOptions but got ' + JSON.stringify(options));\n    }\n\n    protected createDiagramOptions(options: GLSPDiagramWidgetOptions): IDiagramOptions {\n        return {\n            clientId: this.createClientId(),\n            diagramType: options.diagramType,\n            sourceUri: options.uri,\n            editMode: options.editMode,\n            glspClientProvider: () => this.diagramServiceProvider.getGLSPClientContribution(this.contributionId).glspClient\n        };\n    }\n\n    protected createClientId(): string {\n        return this.diagramType + '_' + this.widgetCount++;\n    }\n\n    protected override createWidgetOptions(uri: URI, options?: GLSPWidgetOpenerOptions): GLSPDiagramWidgetOptions {\n        return {\n            diagramType: this.diagramType,\n            kind: 'navigatable',\n            uri: uri.toString(true),\n            iconClass: this.iconClass,\n            label: uri.path.base,\n            editMode: options && options.editMode ? options.editMode : EditMode.EDITABLE\n        };\n    }\n\n    protected getDiagramConfiguration(options: GLSPDiagramWidgetOptions): DiagramConfiguration {\n        return this.diagramServiceProvider.getDiagramConfiguration(options.diagramType);\n    }\n\n    canHandle(uri: URI, _options?: WidgetOpenerOptions | undefined): number {\n        for (const extension of this.fileExtensions) {\n            if (uri.path.toString().endsWith(extension)) {\n                return 1001;\n            }\n        }\n        return 0;\n    }\n\n    override get id(): string {\n        return deriveDiagramManagerId(this.diagramType);\n    }\n\n    get iconClass(): string {\n        return codiconCSSString('type-hierarchy-sub');\n    }\n\n    get providerName(): string | undefined {\n        return undefined;\n    }\n}\n\nexport interface GLSPWidgetOpenerOptions extends WidgetOpenerOptions {\n    editMode?: string;\n}\n\nexport function deriveDiagramManagerId(diagramType: string): string {\n    return diagramType + '-diagram-manager';\n}\n","/********************************************************************************\n * Copyright (c) 2019-2023 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport {\n    AlignElementsAction,\n    Alignment,\n    bindAsService,\n    ReduceFunctionType,\n    ResizeDimension,\n    ResizeElementsAction,\n    SelectFunctionType\n} from '@eclipse-glsp/client';\nimport { CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry, MenuPath } from '@theia/core';\nimport { ApplicationShell, KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { ContainerContext } from '../glsp-theia-container-module';\nimport { GLSPCommandHandler } from './glsp-command-handler';\nimport { GLSPDiagramMenus } from './glsp-diagram-commands';\nimport { GLSPDiagramKeybindingContext } from './glsp-diagram-keybinding';\n\nexport function registerDiagramLayoutCommands(context: Omit<ContainerContext, 'unbind' | 'rebind'>): void {\n    if (!context.isBound(GLSPLayoutCommandContribution)) {\n        bindAsService(context, CommandContribution, GLSPLayoutCommandContribution);\n    }\n    if (!context.isBound(GLSPLayoutMenuContribution)) {\n        bindAsService(context, MenuContribution, GLSPLayoutMenuContribution);\n    }\n    if (!context.isBound(GLSPLayoutKeybindingContribution)) {\n        bindAsService(context, KeybindingContribution, GLSPLayoutKeybindingContribution);\n    }\n}\n\nexport namespace GLSPLayoutCommands {\n    export const RESIZE_WIDTH_MIN = 'glsp:' + ResizeElementsAction.KIND + ':width:min';\n    export const RESIZE_WIDTH_MIN_LABEL = 'Minimal Width';\n    export const RESIZE_WIDTH_MAX = 'glsp:' + ResizeElementsAction.KIND + ':width:max';\n    export const RESIZE_WIDTH_MAX_LABEL = 'Maximal Width';\n    export const RESIZE_WIDTH_AVG = 'glsp:' + ResizeElementsAction.KIND + ':width:avg';\n    export const RESIZE_WIDTH_AVG_LABEL = 'Average Width';\n    export const RESIZE_WIDTH_FIRST = 'glsp:' + ResizeElementsAction.KIND + ':width:first';\n    export const RESIZE_WIDTH_FIRST_LABEL = 'Width of First Selected Element';\n    export const RESIZE_WIDTH_LAST = 'glsp:' + ResizeElementsAction.KIND + ':width:last';\n    export const RESIZE_WIDTH_LAST_LABEL = 'Width of Last Selected Element';\n\n    export const RESIZE_HEIGHT_MIN = 'glsp:' + ResizeElementsAction.KIND + ':height:min';\n    export const RESIZE_HEIGHT_MIN_LABEL = 'Minimal Height';\n    export const RESIZE_HEIGHT_MAX = 'glsp:' + ResizeElementsAction.KIND + ':height:max';\n    export const RESIZE_HEIGHT_MAX_LABEL = 'Maximal Height';\n    export const RESIZE_HEIGHT_AVG = 'glsp:' + ResizeElementsAction.KIND + ':height:avg';\n    export const RESIZE_HEIGHT_AVG_LABEL = 'Average Height';\n    export const RESIZE_HEIGHT_FIRST = 'glsp:' + ResizeElementsAction.KIND + ':height:first';\n    export const RESIZE_HEIGHT_FIRST_LABEL = 'Height of First Selected Element';\n    export const RESIZE_HEIGHT_LAST = 'glsp:' + ResizeElementsAction.KIND + ':height:last';\n    export const RESIZE_HEIGHT_LAST_LABEL = 'Height of Last Selected Element';\n\n    export const RESIZE_WIDTH_AND_HEIGHT_MIN = 'glsp:' + ResizeElementsAction.KIND + ':width_and_height:min';\n    export const RESIZE_WIDTH_AND_HEIGHT_MIN_LBL = 'Minimal Width and Height';\n    export const RESIZE_WIDTH_AND_HEIGHT_MAX = 'glsp:' + ResizeElementsAction.KIND + ':width_and_height:max';\n    export const RESIZE_WIDTH_AND_HEIGHT_MAX_LBL = 'Maximal Width and Height';\n    export const RESIZE_WIDTH_AND_HEIGHT_AVG = 'glsp:' + ResizeElementsAction.KIND + ':width_and_height:avg';\n    export const RESIZE_WIDTH_AND_HEIGHT_AVG_LBL = 'Average Width and Height';\n    export const RESIZE_WIDTH_AND_HEIGHT_FIRST = 'glsp:' + ResizeElementsAction.KIND + ':width_and_height:first';\n    export const RESIZE_WIDTH_AND_HEIGHT_FIRST_LBL = 'Width and Height of First Selected Element';\n    export const RESIZE_WIDTH_AND_HEIGHT_LAST = 'glsp:' + ResizeElementsAction.KIND + ':width_and_height:last';\n    export const RESIZE_WIDTH_AND_HEIGHT_LAST_LBL = 'Width and Height of Last Selected Element';\n\n    export const ALIGN_LEFT = 'glsp:' + AlignElementsAction.KIND + ':left';\n    export const ALIGN_LEFT_LABEL = 'Left';\n    export const ALIGN_CENTER = 'glsp:' + AlignElementsAction.KIND + ':center';\n    export const ALIGN_CENTER_LABEL = 'Center';\n    export const ALIGN_RIGHT = 'glsp:' + AlignElementsAction.KIND + ':right';\n    export const ALIGN_RIGHT_LABEL = 'Right';\n    export const ALIGN_TOP = 'glsp:' + AlignElementsAction.KIND + ':top';\n    export const ALIGN_TOP_LABEL = 'Top';\n    export const ALIGN_MIDDLE = 'glsp:' + AlignElementsAction.KIND + ':middle';\n    export const ALIGN_MIDDLE_LABEL = 'Middle';\n    export const ALIGN_BOTTOM = 'glsp:' + AlignElementsAction.KIND + ':bottom';\n    export const ALIGN_BOTTOM_LABEL = 'Bottom';\n\n    export const ALIGN_LEFT_FIRST = 'glsp:' + AlignElementsAction.KIND + ':left:first';\n    export const ALIGN_LEFT_FIRST_LABEL = 'Left of First Selected Element';\n    export const ALIGN_CENTER_FIRST = 'glsp:' + AlignElementsAction.KIND + ':center:first';\n    export const ALIGN_CENTER_FIRST_LABEL = 'Center of First Selected Element';\n    export const ALIGN_RIGHT_FIRST = 'glsp:' + AlignElementsAction.KIND + ':right:first';\n    export const ALIGN_RIGHT_FIRST_LABEL = 'Right of First Selected Element';\n    export const ALIGN_TOP_FIRST = 'glsp:' + AlignElementsAction.KIND + ':top:first';\n    export const ALIGN_TOP_FIRST_LABEL = 'Top of First Selected Element';\n    export const ALIGN_MIDDLE_FIRST = 'glsp:' + AlignElementsAction.KIND + ':middle:first';\n    export const ALIGN_MIDDLE_FIRST_LABEL = 'Middle of First Selected Element';\n    export const ALIGN_BOTTOM_FIRST = 'glsp:' + AlignElementsAction.KIND + ':bottom:first';\n    export const ALIGN_BOTTOM_FIRST_LABEL = 'Bottom of First Selected Element';\n\n    export const ALIGN_LEFT_LAST = 'glsp:' + AlignElementsAction.KIND + ':left:last';\n    export const ALIGN_LEFT_LAST_LABEL = 'Left of Last Selected Element';\n    export const ALIGN_CENTER_LAST = 'glsp:' + AlignElementsAction.KIND + ':center:last';\n    export const ALIGN_CENTER_LAST_LABEL = 'Center of Last Selected Element';\n    export const ALIGN_RIGHT_LAST = 'glsp:' + AlignElementsAction.KIND + ':right:last';\n    export const ALIGN_RIGHT_LAST_LABEL = 'Right of Last Selected Element';\n    export const ALIGN_TOP_LAST = 'glsp:' + AlignElementsAction.KIND + ':top:last';\n    export const ALIGN_TOP_LAST_LABEL = 'Top of Last Selected Element';\n    export const ALIGN_MIDDLE_LAST = 'glsp:' + AlignElementsAction.KIND + ':middle:last';\n    export const ALIGN_MIDDLE_LAST_LABEL = 'Middle of Last Selected Element';\n    export const ALIGN_BOTTOM_LAST = 'glsp:' + AlignElementsAction.KIND + ':bottom:last';\n    export const ALIGN_BOTTOM_LAST_LABEL = 'Bottom of Last Selected Element';\n}\n\nexport namespace GLSPLayoutMenus {\n    export const ALIGN_MENU: MenuPath = GLSPDiagramMenus.DIAGRAM.concat('align');\n    export const ALIGN_HORIZONTAL_GROUP: MenuPath = ALIGN_MENU.concat('1_horizontal');\n    export const ALIGN_VERTICAL_GROUP: MenuPath = ALIGN_MENU.concat('2_vertical');\n    export const ALIGN_HORIZONTAL_FIRST_GROUP: MenuPath = ALIGN_MENU.concat('3_horizontal_first');\n    export const ALIGN_VERTICAL_FIRST_GROUP: MenuPath = ALIGN_MENU.concat('4_vertical_first');\n    export const ALIGN_HORIZONTAL_LAST_GROUP: MenuPath = ALIGN_MENU.concat('5_horizontal_last');\n    export const ALIGN_VERTICAL_LAST_GROUP: MenuPath = ALIGN_MENU.concat('6_vertical_last');\n\n    export const RESIZE_MENU: MenuPath = GLSPDiagramMenus.DIAGRAM.concat('resize');\n    export const RESIZE_WIDTH_GROUP: MenuPath = RESIZE_MENU.concat('1_width');\n    export const RESIZE_HEIGHT_GROUP: MenuPath = RESIZE_MENU.concat('2_height');\n    export const RESIZE_WIDTH_AND_HEIGHT_GROUP: MenuPath = RESIZE_MENU.concat('3_width_and_height');\n}\n\n@injectable()\nexport class GLSPLayoutMenuContribution implements MenuContribution {\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerSubmenu(GLSPLayoutMenus.RESIZE_MENU, 'Resize');\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_MIN,\n            order: '1'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_MAX,\n            order: '2'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_AVG,\n            order: '3'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_FIRST,\n            order: '4'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_LAST,\n            order: '5'\n        });\n\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_HEIGHT_MIN,\n            order: '1'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_HEIGHT_MAX,\n            order: '2'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_HEIGHT_AVG,\n            order: '3'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_HEIGHT_FIRST,\n            order: '5'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_HEIGHT_LAST,\n            order: '4'\n        });\n\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_AND_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_MIN,\n            order: '1'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_AND_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_MAX,\n            order: '2'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_AND_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_AVG,\n            order: '3'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_AND_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_FIRST,\n            order: '4'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.RESIZE_WIDTH_AND_HEIGHT_GROUP, {\n            commandId: GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_LAST,\n            order: '5'\n        });\n\n        registry.registerSubmenu(GLSPLayoutMenus.ALIGN_MENU, 'Align');\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_LEFT,\n            order: '1'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_CENTER,\n            order: '2'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_RIGHT,\n            order: '3'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_TOP,\n            order: '4'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_MIDDLE,\n            order: '5'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_BOTTOM,\n            order: '6'\n        });\n\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_FIRST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_LEFT_FIRST,\n            order: '1'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_FIRST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_CENTER_FIRST,\n            order: '2'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_FIRST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_RIGHT_FIRST,\n            order: '3'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_FIRST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_TOP_FIRST,\n            order: '4'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_FIRST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_MIDDLE_FIRST,\n            order: '5'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_FIRST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_BOTTOM_FIRST,\n            order: '6'\n        });\n\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_LAST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_LEFT_LAST,\n            order: '1'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_LAST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_CENTER_LAST,\n            order: '2'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_HORIZONTAL_LAST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_RIGHT_LAST,\n            order: '3'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_LAST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_TOP_LAST,\n            order: '4'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_LAST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_MIDDLE_LAST,\n            order: '5'\n        });\n        registry.registerMenuAction(GLSPLayoutMenus.ALIGN_VERTICAL_LAST_GROUP, {\n            commandId: GLSPLayoutCommands.ALIGN_BOTTOM_LAST,\n            order: '6'\n        });\n    }\n}\n\n@injectable()\nexport class GLSPLayoutCommandContribution implements CommandContribution {\n    constructor(@inject(ApplicationShell) protected readonly shell: ApplicationShell) {}\n\n    registerResize(\n        registry: CommandRegistry,\n        id: string,\n        label: string,\n        dimension: ResizeDimension,\n        reduceFunction: ReduceFunctionType\n    ): void {\n        registry.registerCommand(\n            {\n                id: id,\n                category: 'Diagram',\n                label: 'Resize to ' + label\n            },\n            new GLSPCommandHandler(this.shell, {\n                actions: () => [ResizeElementsAction.create({ dimension, reduceFunction })],\n                isEnabled: context => !context.isReadonly && context.get().selectedElementIds.length > 1\n            })\n        );\n    }\n\n    registerAlign(registry: CommandRegistry, id: string, label: string, alignment: Alignment, selectionFunction: SelectFunctionType): void {\n        registry.registerCommand(\n            {\n                id: id,\n                category: 'Diagram',\n                label: 'Align ' + label\n            },\n            new GLSPCommandHandler(this.shell, {\n                actions: () => [AlignElementsAction.create({ alignment, selectionFunction })],\n                isEnabled: context => !context.isReadonly && context.get().selectedElementIds.length > 1\n            })\n        );\n    }\n\n    registerCommands(reg: CommandRegistry): void {\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_MIN,\n            GLSPLayoutCommands.RESIZE_WIDTH_MIN_LABEL,\n            ResizeDimension.Width,\n            'min'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_MAX,\n            GLSPLayoutCommands.RESIZE_WIDTH_MAX_LABEL,\n            ResizeDimension.Width,\n            'max'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_AVG,\n            GLSPLayoutCommands.RESIZE_WIDTH_AVG_LABEL,\n            ResizeDimension.Width,\n            'avg'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_FIRST,\n            GLSPLayoutCommands.RESIZE_WIDTH_FIRST_LABEL,\n            ResizeDimension.Width,\n            'first'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_LAST,\n            GLSPLayoutCommands.RESIZE_WIDTH_LAST_LABEL,\n            ResizeDimension.Width,\n            'last'\n        );\n\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_HEIGHT_MIN,\n            GLSPLayoutCommands.RESIZE_HEIGHT_MIN_LABEL,\n            ResizeDimension.Height,\n            'min'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_HEIGHT_MAX,\n            GLSPLayoutCommands.RESIZE_HEIGHT_MAX_LABEL,\n            ResizeDimension.Height,\n            'max'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_HEIGHT_AVG,\n            GLSPLayoutCommands.RESIZE_HEIGHT_AVG_LABEL,\n            ResizeDimension.Height,\n            'avg'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_HEIGHT_FIRST,\n            GLSPLayoutCommands.RESIZE_HEIGHT_FIRST_LABEL,\n            ResizeDimension.Height,\n            'first'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_HEIGHT_LAST,\n            GLSPLayoutCommands.RESIZE_HEIGHT_LAST_LABEL,\n            ResizeDimension.Height,\n            'last'\n        );\n\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_MIN,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_MIN_LBL,\n            ResizeDimension.Width_And_Height,\n            'min'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_MAX,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_MAX_LBL,\n            ResizeDimension.Width_And_Height,\n            'max'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_AVG,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_AVG_LBL,\n            ResizeDimension.Width_And_Height,\n            'avg'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_FIRST,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_FIRST_LBL,\n            ResizeDimension.Width_And_Height,\n            'first'\n        );\n        this.registerResize(\n            reg,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_LAST,\n            GLSPLayoutCommands.RESIZE_WIDTH_AND_HEIGHT_LAST_LBL,\n            ResizeDimension.Width_And_Height,\n            'last'\n        );\n\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_LEFT, GLSPLayoutCommands.ALIGN_LEFT_LABEL, Alignment.Left, 'all');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_CENTER, GLSPLayoutCommands.ALIGN_CENTER_LABEL, Alignment.Center, 'all');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_RIGHT, GLSPLayoutCommands.ALIGN_RIGHT_LABEL, Alignment.Right, 'all');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_TOP, GLSPLayoutCommands.ALIGN_TOP_LABEL, Alignment.Top, 'all');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_MIDDLE, GLSPLayoutCommands.ALIGN_MIDDLE_LABEL, Alignment.Middle, 'all');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_BOTTOM, GLSPLayoutCommands.ALIGN_BOTTOM_LABEL, Alignment.Bottom, 'all');\n\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_LEFT_FIRST, GLSPLayoutCommands.ALIGN_LEFT_FIRST_LABEL, Alignment.Left, 'first');\n        this.registerAlign(\n            reg,\n            GLSPLayoutCommands.ALIGN_CENTER_FIRST,\n            GLSPLayoutCommands.ALIGN_CENTER_FIRST_LABEL,\n            Alignment.Center,\n            'first'\n        );\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_RIGHT_FIRST, GLSPLayoutCommands.ALIGN_RIGHT_FIRST_LABEL, Alignment.Right, 'first');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_TOP_FIRST, GLSPLayoutCommands.ALIGN_TOP_FIRST_LABEL, Alignment.Top, 'first');\n        this.registerAlign(\n            reg,\n            GLSPLayoutCommands.ALIGN_MIDDLE_FIRST,\n            GLSPLayoutCommands.ALIGN_MIDDLE_FIRST_LABEL,\n            Alignment.Middle,\n            'first'\n        );\n        this.registerAlign(\n            reg,\n            GLSPLayoutCommands.ALIGN_BOTTOM_FIRST,\n            GLSPLayoutCommands.ALIGN_BOTTOM_FIRST_LABEL,\n            Alignment.Bottom,\n            'first'\n        );\n\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_LEFT_LAST, GLSPLayoutCommands.ALIGN_LEFT_LAST_LABEL, Alignment.Left, 'last');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_CENTER_LAST, GLSPLayoutCommands.ALIGN_CENTER_LAST_LABEL, Alignment.Center, 'last');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_RIGHT_LAST, GLSPLayoutCommands.ALIGN_RIGHT_LAST_LABEL, Alignment.Right, 'last');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_TOP_LAST, GLSPLayoutCommands.ALIGN_TOP_LAST_LABEL, Alignment.Top, 'last');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_MIDDLE_LAST, GLSPLayoutCommands.ALIGN_MIDDLE_LAST_LABEL, Alignment.Middle, 'last');\n        this.registerAlign(reg, GLSPLayoutCommands.ALIGN_BOTTOM_LAST, GLSPLayoutCommands.ALIGN_BOTTOM_LAST_LABEL, Alignment.Bottom, 'last');\n    }\n}\n\n@injectable()\nexport class GLSPLayoutKeybindingContribution implements KeybindingContribution {\n    constructor(@inject(GLSPDiagramKeybindingContext) protected readonly diagramKeybindingContext: GLSPDiagramKeybindingContext) {}\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        registry.registerKeybinding({\n            command: GLSPLayoutCommands.ALIGN_LEFT,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'alt+shift+left',\n            when: '!glspEditorIsReadonly && glspEditorHasMultipleSelection'\n        });\n        registry.registerKeybinding({\n            command: GLSPLayoutCommands.ALIGN_RIGHT,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'alt+shift+right',\n            when: '!glspEditorIsReadonly && glspEditorHasMultipleSelection'\n        });\n        registry.registerKeybinding({\n            command: GLSPLayoutCommands.ALIGN_TOP,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'alt+shift+up',\n            when: '!glspEditorIsReadonly && glspEditorHasMultipleSelection'\n        });\n        registry.registerKeybinding({\n            command: GLSPLayoutCommands.ALIGN_BOTTOM,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'alt+shift+down',\n            when: '!glspEditorIsReadonly && glspEditorHasMultipleSelection'\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2021-2024 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { codiconCSSString, lazyBind } from '@eclipse-glsp/client';\nimport { ContainerModule, inject, injectable, interfaces } from '@theia/core/shared/inversify';\nimport { GLSPDiagramWidget } from '.';\nimport { GLSPDiagramLanguage } from '../common/glsp-diagram-language';\nimport { registerCopyPasteContextMenu } from './copy-paste-context-menu-contribution';\nimport { DiagramWidgetFactory, createDiagramWidgetFactory } from './diagram/diagram-widget-factory';\nimport { GLSPDiagramManager, registerDiagramManager } from './diagram/glsp-diagram-manager';\nimport { registerDiagramLayoutCommands } from './diagram/glsp-layout-commands';\nimport { BaseGLSPClientContribution, GLSPClientContribution } from './glsp-client-contribution';\nimport { registerMarkerNavigationCommands } from './theia-navigate-to-marker-contribution';\n\n/**\n * A wrapper interface to get access to the binding related functions\n * for a inversify container.\n */\nexport interface ContainerContext {\n    bind: interfaces.Bind;\n    unbind: interfaces.Unbind;\n    isBound: interfaces.IsBound;\n    rebind: interfaces.Rebind;\n}\n\n/**\n *  The `GLSPTheiaFrontendModule` provides the necessary required module configuration\n *  to implement a theia GLSP diagram language integration.\n */\nexport abstract class GLSPTheiaFrontendModule extends ContainerModule {\n    protected abstract diagramLanguage: GLSPDiagramLanguage;\n\n    protected enableLayoutCommands = true;\n    protected enableMarkerNavigationCommands = true;\n    protected enableCopyPaste = false;\n\n    constructor() {\n        super((bind, unbind, isBound, rebind) => this.initialize({ bind, unbind, isBound, rebind }));\n    }\n\n    initialize(context: ContainerContext): void {\n        this.bindGLSPClientContribution(context);\n        this.bindDiagramConfiguration(context);\n        this.bindDiagramWidgetFactory(context);\n        this.configureDiagramManager(context);\n\n        // Optional default configuration\n        this.configureDiagramLayoutCommands(context);\n        this.configureCopyPasteContextMenu(context);\n        this.configureMarkerNavigationCommands(context);\n        this.configure(context);\n    }\n\n    /**\n     * Defines the binding for the glsp client contribution of the diagram integration. A {@link ConfigurableGLSPClientContribution}\n     * with the same id as the diagramLanguage is bound. Can be overwritten in subclasses to provide a custom binding using\n     * the {@link GLSPClientContribution} service identifier.\n     *\n     * For example:\n     * ```typescript\n     * context.bind(GLSPClientContribution).toSelf(MyCustomGLSPClientContribution);\n     * ```\n     * Note that glsp client contribution bindings are consumed via multi-injection. This means binding the {@link GLSPClientContribution}\n     * service identifier in singleton scope has no effect.\n     *\n     * @param context the container context\n     */\n    bindGLSPClientContribution(context: ContainerContext): void {\n        context.bind(GLSPClientContribution).toDynamicValue(ctx => {\n            const childContainer = ctx.container.createChild();\n            childContainer.bind(GLSPDiagramLanguage).toConstantValue(this.diagramLanguage);\n            return childContainer.resolve(ConfigurableGLSPClientContribution);\n        });\n    }\n\n    /**\n     * Defines the binding for the diagram configuration of the diagram integration. Diagram configurations are multi-injected\n     * and typically just bound to the `DiagramConfiguration` service identifier with the to() syntax.\n     *\n     * For example:\n     * ```typescript\n     * context.bind(DiagramConfiguration).to(MyCustomDiagramConfiguration);\n     * ```\n     *\n     * Note that diagram configuration bindings are consumed via multi-injection. This means binding the `DiagramConfiguration`\n     * service identifier in singleton scope has no effect.\n     *\n     * @param context the container context\n     */\n    abstract bindDiagramConfiguration(context: ContainerContext): void;\n\n    /**\n     * Defines the binding for the {@link DiagramWidgetFactory} of the diagram integration. Per default a\n     * factory that constructs a {@link GLSPDiagramWidget} instance is bound.\n     * Can be overwritten in subclasses to provide a custom binding using\n     * the {@link DiagramWidgetFactory} service identifier.\n     *\n     * For example:\n     * ```typescript\n     * context.bind(DiagramWidgetFactory)\n     *  .toDynamicValue(ctx => createDiagramWidgetFactory(ctx, this.diagramLanguage.diagramType, MyDiagramWidget));\n     *\n     * ```\n     * Note that glsp diagram factory bindings are consumed via multi-injection. This means binding the {@link DiagramWidgetFactory}\n     * service identifier in singleton scope has no effect.\n     *\n     * @param context the container context\n     */\n    bindDiagramWidgetFactory(context: ContainerContext): void {\n        lazyBind(context, GLSPDiagramWidget)?.toSelf();\n        context.bind(DiagramWidgetFactory).toDynamicValue(ctx => createDiagramWidgetFactory(ctx, this.diagramLanguage.diagramType));\n    }\n\n    /**\n     * Configures the bindings for the diagram manager of the diagram integration. A {@link ConfigurableGLSPDiagramManager}\n     * is bound to a generated service identifier in singleton scope and then additional bindings for this service\n     * identifier are registered. Can be overwritten in subclasses to provide a custom binding.\n     *\n     *  For example:\n     * ```typescript\n     * context.bind(MyDiagramManager).to(MyDiagramManager).inSingletonScope();\n     * registerDiagramManager(context.bind, MyDiagramManager);\n     * ```\n     * @param context the container context\n     */\n    configureDiagramManager(context: ContainerContext): void {\n        const diagramManagerServiceId = Symbol(`DiagramManager_${this.diagramLanguage.diagramType}`);\n        context\n            .bind(diagramManagerServiceId)\n            .toDynamicValue(ctx => {\n                const childContainer = ctx.container.createChild();\n                childContainer.bind(GLSPDiagramLanguage).toConstantValue(this.diagramLanguage);\n                return childContainer.resolve(InternalGLSPDiagramManager);\n            })\n            .inSingletonScope();\n        registerDiagramManager(context.bind, diagramManagerServiceId, false);\n    }\n\n    /**\n     * Can be overwritten by subclasses to provide additional configuration (e.g. extra bindings)\n     * for this module.\n     *\n     * For example:\n     * ```typescript\n     * context.bind(MyCustomClass).toSelf().inSingletonScope()\n     * ```\n     * @param context the container context\n     */\n    configure(context: ContainerContext): void {\n        // Empty per default\n    }\n\n    /**\n     * Optional configuration to enable the default diagram layout commands for the diagram integration.\n     * Can be enabled/disabled using the {@link GLSPTheiaFrontendModule.enableLayoutCommands}  property flag.\n     *\n     * @param context the diagram context\n     */\n    configureDiagramLayoutCommands(context: ContainerContext): void {\n        if (this.enableLayoutCommands) {\n            registerDiagramLayoutCommands(context);\n        }\n    }\n\n    /**\n     * Optional configuration for copy & paste functionality of the diagram integration.\n     * Can be enabled/disabled using the {@link GLSPTheiaFrontendModule.enableCopyPaste} property flag.\n     * Note that the glsp server also needs to support copy & paste for this diagram configuration.\n     *\n     * @param context the diagram context\n     */\n    configureCopyPasteContextMenu(context: ContainerContext): void {\n        if (this.enableCopyPaste) {\n            registerCopyPasteContextMenu(context);\n        }\n    }\n\n    /**\n     * Optional configuration to enable marker navigation for the diagram integration.\n     * Can be enabled/disabled using the {@link GLSPTheiaFrontendModule.enableMarkerNavigationCommands}  property flag.\n     * Note that the glsp server also needs to support copy & paste for this diagram configuration.\n     *\n     * @param context the diagram context\n     */\n    configureMarkerNavigationCommands(context: ContainerContext): void {\n        if (this.enableMarkerNavigationCommands) {\n            registerMarkerNavigationCommands(context);\n        }\n    }\n}\n\nconst GLSPDiagramLanguage = Symbol('GLSPDiagramLanguage');\n\n/**\n * Internal class that is used in {@link GLSPTheiaFrontendModule.configureDiagramManager} to\n * bind a default implementation for `DiagramManager`. A custom `DiagramManager` should\n * never extend this class. Use {@link GLSPDiagramManager} instead.\n */\n\n@injectable()\nclass InternalGLSPDiagramManager extends GLSPDiagramManager {\n    private _diagramType: string;\n    private _label: string;\n    private _fileExtensions: string[] = [];\n    private _iconClass = codiconCSSString('type-hierarchy-sub');\n    private _contributionId: string;\n    private _providerName?: string;\n\n    constructor(@inject(GLSPDiagramLanguage) diagramLanguage: GLSPDiagramLanguage) {\n        super();\n        this._fileExtensions = diagramLanguage.fileExtensions;\n        this._diagramType = diagramLanguage.diagramType;\n        this._label = diagramLanguage.label;\n        this._iconClass = diagramLanguage.iconClass || this._iconClass;\n        this._contributionId = diagramLanguage.contributionId;\n        this._providerName = diagramLanguage.providerName;\n    }\n\n    get fileExtensions(): string[] {\n        return this._fileExtensions;\n    }\n\n    get diagramType(): string {\n        return this._diagramType;\n    }\n\n    get label(): string {\n        return this._label;\n    }\n\n    get contributionId(): string {\n        return this._contributionId;\n    }\n\n    override get providerName(): string | undefined {\n        return this._providerName;\n    }\n\n    override get iconClass(): string {\n        return this._iconClass;\n    }\n}\n\n/**\n * Internal class that is used in {@link GLSPTheiaFrontendModule.bindGLSPClientContribution} to\n * bind a default implementation for {@link GLSPClientContribution}. A custom {@link GLSPClientContribution}  should\n * never extend this class. Use {@link BaseGLSPClientContribution} instead.\n */\n@injectable()\nclass ConfigurableGLSPClientContribution extends BaseGLSPClientContribution {\n    readonly id: string;\n\n    constructor(@inject(GLSPDiagramLanguage) diagramLanguage: GLSPDiagramLanguage) {\n        super();\n        this.id = diagramLanguage.contributionId;\n    }\n}\n","/********************************************************************************\n * Copyright (c) 2019-2024 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './copy-paste-context-menu-contribution';\nexport * from './diagram-service-provider';\nexport * from './diagram/diagram-widget-factory';\nexport * from './diagram/features/default-modules';\nexport * from './diagram/features/export/theia-export-module';\nexport * from './diagram/features/export/theia-export-svg-action-handler';\nexport * from './diagram/features/navigation/theia-navigate-to-external-target-handler';\nexport * from './diagram/features/navigation/theia-navigation-module';\nexport * from './diagram/features/notification/notification-module';\nexport * from './diagram/features/notification/theia-glsp-message-service';\nexport * from './diagram/features/select/theia-glsp-selection-forwarder';\nexport * from './diagram/features/select/theia-select-module';\nexport * from './diagram/features/source-model-watcher/theia-source-model-changed-handler';\nexport * from './diagram/features/source-model-watcher/theia-source-model-watcher-module';\nexport * from './diagram/glsp-command-handler';\nexport * from './diagram/glsp-diagram-commands';\nexport * from './diagram/glsp-diagram-configuration';\nexport * from './diagram/glsp-diagram-context-key-service';\nexport * from './diagram/glsp-diagram-keybinding';\nexport * from './diagram/glsp-diagram-manager';\nexport * from './diagram/glsp-diagram-widget';\nexport * from './diagram/glsp-layout-commands';\nexport * from './diagram/glsp-saveable';\nexport * from './diagram/theia-context-menu-service';\nexport * from './diagram/theia-marker-manager';\nexport * from './glsp-client-contribution';\nexport * from './glsp-frontend-contribution';\nexport * from './glsp-theia-container-module';\nexport * from './theia-glsp-context-menu-service';\nexport * from './theia-integration-frontend-module';\nexport * from './theia-jsonrpc-glsp-client';\nexport * from './theia-navigate-to-marker-contribution';\nexport * from './theia-opener-options-navigation-service';\n","/********************************************************************************\n * Copyright (c) 2020-2024 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { bindAsService, collectIssueMarkers, NavigateToMarkerAction } from '@eclipse-glsp/client/lib';\nimport { CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry } from '@theia/core';\nimport { ApplicationShell, KeybindingContribution, KeybindingRegistry } from '@theia/core/lib/browser';\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { GLSPCommandHandler } from './diagram/glsp-command-handler';\nimport { GLSPDiagramKeybindingContext } from './diagram/glsp-diagram-keybinding';\nimport { GLSPContextMenu } from './diagram/theia-context-menu-service';\nimport { ContainerContext } from './glsp-theia-container-module';\n\nexport function registerMarkerNavigationCommands(context: Omit<ContainerContext, 'unbind' | 'rebind'>): void {\n    if (!context.isBound(NavigateToMarkerCommandContribution)) {\n        bindAsService(context, CommandContribution, NavigateToMarkerCommandContribution);\n    }\n    if (!context.isBound(NavigateToMarkerMenuContribution)) {\n        bindAsService(context, MenuContribution, NavigateToMarkerMenuContribution);\n    }\n    if (!context.isBound(NavigateToMarkerKeybindingContribution)) {\n        bindAsService(context, KeybindingContribution, NavigateToMarkerKeybindingContribution);\n    }\n}\n\nexport namespace NavigateToMarkerCommand {\n    export const NEXT_MARKER = 'next-marker';\n    export const PREVIOUS_MARKER = 'previous-marker';\n}\n\n@injectable()\nexport class NavigateToMarkerCommandContribution implements CommandContribution {\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(\n            { id: NavigateToMarkerCommand.NEXT_MARKER, label: 'Go to Next Marker', category: 'Diagram' },\n            new GLSPCommandHandler(this.shell, {\n                actions: () => [NavigateToMarkerAction.create({ direction: 'next' })],\n                isEnabled: context => collectIssueMarkers(context.modelRoot).length > 0\n            })\n        );\n        commands.registerCommand(\n            { id: NavigateToMarkerCommand.PREVIOUS_MARKER, label: 'Go to Previous Marker', category: 'Diagram' },\n            new GLSPCommandHandler(this.shell, {\n                actions: () => [NavigateToMarkerAction.create({ direction: 'previous' })],\n                isEnabled: context => collectIssueMarkers(context.modelRoot).length > 0\n            })\n        );\n    }\n}\n\n@injectable()\nexport class NavigateToMarkerMenuContribution implements MenuContribution {\n    static readonly NAVIGATION = GLSPContextMenu.MENU_PATH.concat('navigate');\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerSubmenu(NavigateToMarkerMenuContribution.NAVIGATION, 'Go to');\n        menus.registerMenuAction(NavigateToMarkerMenuContribution.NAVIGATION.concat('m'), {\n            commandId: NavigateToMarkerCommand.NEXT_MARKER,\n            label: 'Next Marker'\n        });\n        menus.registerMenuAction(NavigateToMarkerMenuContribution.NAVIGATION.concat('m'), {\n            commandId: NavigateToMarkerCommand.PREVIOUS_MARKER,\n            label: 'Previous Marker'\n        });\n    }\n}\n\n@injectable()\nexport class NavigateToMarkerKeybindingContribution implements KeybindingContribution {\n    @inject(GLSPDiagramKeybindingContext) protected readonly diagramKeybindingContext: GLSPDiagramKeybindingContext;\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: NavigateToMarkerCommand.NEXT_MARKER,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'f8'\n        });\n        keybindings.registerKeybinding({\n            command: NavigateToMarkerCommand.PREVIOUS_MARKER,\n            context: this.diagramKeybindingContext.id,\n            keybinding: 'shift+f8'\n        });\n    }\n}\n"],"names":[],"sourceRoot":""}