{"version":3,"file":"vendors-node_modules_theia_output_lib_browser_output-frontend-module_js.js","mappings":"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cAAc;AACzB,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAA0C,SAAS;AACnD;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA,gBAAgB,YAAY;AAC5B;;AAEA;AACA,4DAA4D;AAC5D,gEAAgE;AAChE,oEAAoE;AACpE,wEAAwE;AACxE;AACA,2DAA2D,SAAS;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,UAAU;AACrB,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,4DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;;;;;;;AC/UwF;AACxF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,6FAAG,CAAC,0EAAO;;;;AAIxB,iEAAe,0EAAO,aAAa;;;;;;;;;;;;;;;;ACZE;;AAEd;AACvB,iEAAe,sCAAY;;;;;;;;;;;;;;;;;;ACHkB;AACM;AACH;AAChD;AACA;AACA;AACe,qBAAqB,uDAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAa;AACrC;AACA;AACA;AACA,gGAAgG,sCAAsC,MAAM,2BAA2B;AACvK;AACA;AACA,2FAA2F,mCAAmC,MAAM,wBAAwB;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAAgG,eAAe,MAAM,sBAAsB;AAC3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI,YAAY;AAC7B,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,8BAA8B,eAAe;;AAE7C,iCAAiC,YAAY;AAC7C,iCAAiC,sBAAsB;AACvD,iCAAiC,YAAY;AAC7C,iCAAiC,YAAY;;AAE7C;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,8BAA8B,eAAe;;AAE7C,iCAAiC,YAAY;AAC7C,iCAAiC,sBAAsB;AACvD;AACA,iCAAiC,YAAY;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,wBAAwB;AACxE;AACA,oCAAoC,qDAAQ,+BAA+B,+BAA+B;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mGAAmG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChWA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjB0C;AAC3B;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,2DAAU;AAChC;AACA;AACA;AACA;AACA;AACA,yEAAyE,GAAG;AAC5E;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtCO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB;AAC3C,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,mFAAmF,aAAa;AAChG;;AAEA;AACA,UAAU,QAAQ;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mDAAmD,WAAW;AAC9D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,iEAAiE,cAAc;AAC/E;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA","sources":["webpack:///../node_modules/@theia/output/src/browser/style/output.css?../node_modules/css-loader/dist/cjs.js","webpack:///../node_modules/@theia/output/src/browser/output-channel.ts?","webpack:///../node_modules/@theia/output/src/browser/output-commands.ts?","webpack:///../node_modules/@theia/output/src/browser/output-context-menu.ts?","webpack:///../node_modules/@theia/output/src/browser/output-contribution.ts?","webpack:///../node_modules/@theia/output/src/browser/output-editor-factory.ts?","webpack:///../node_modules/@theia/output/src/browser/output-editor-model-factory.ts?","webpack:///../node_modules/@theia/output/src/browser/output-frontend-module.ts?","webpack:///../node_modules/@theia/output/src/browser/output-preferences.ts?","webpack:///../node_modules/@theia/output/src/browser/output-resource.ts?","webpack:///../node_modules/@theia/output/src/browser/output-toolbar-contribution.tsx?","webpack:///../node_modules/@theia/output/src/browser/output-widget.ts?","webpack:///../node_modules/@theia/output/src/common/output-uri.ts?","webpack:///../node_modules/@theia/output/node_modules/eventemitter3/index.js?","webpack:///../node_modules/@theia/output/src/browser/style/output.css?","webpack:///../node_modules/@theia/output/node_modules/eventemitter3/index.mjs?","webpack:///../node_modules/@theia/output/node_modules/p-queue/dist/index.js?","webpack:///../node_modules/@theia/output/node_modules/p-queue/dist/lower-bound.js?","webpack:///../node_modules/@theia/output/node_modules/p-queue/dist/priority-queue.js?","webpack:///../node_modules/@theia/output/node_modules/p-timeout/index.js?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-output .editor-container {\n  height: 100%;\n}\n\n.theia-output .theia-output-error {\n  color: var(--theia-errorForeground);\n}\n\n.theia-output .theia-output-warning {\n  color: var(--theia-editorWarning-foreground);\n}\n\n#outputChannelList .theia-select-component {\n  width: 170px;\n  margin-right: 4px;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./../node_modules/@theia/output/src/browser/style/output.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;EACE,YAAY;AACd;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-output .editor-container {\\n  height: 100%;\\n}\\n\\n.theia-output .theia-output-error {\\n  color: var(--theia-errorForeground);\\n}\\n\\n.theia-output .theia-output-warning {\\n  color: var(--theia-editorWarning-foreground);\\n}\\n\\n#outputChannelList .theia-select-component {\\n  width: 170px;\\n  margin-right: 4px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { Resource, ResourceResolver } from '@theia/core/lib/common/resource';\nimport { Emitter, Event, Disposable, DisposableCollection } from '@theia/core';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoTextModelService } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { OutputUri } from '../common/output-uri';\nimport { OutputResource } from '../browser/output-resource';\nimport { OutputPreferences } from './output-preferences';\nimport { IReference } from '@theia/monaco-editor-core/esm/vs/base/common/lifecycle';\nimport * as monaco from '@theia/monaco-editor-core';\nimport PQueue from 'p-queue';\n\n@injectable()\nexport class OutputChannelManager implements Disposable, ResourceResolver {\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(OutputPreferences)\n    protected readonly preferences: OutputPreferences;\n\n    protected readonly channels = new Map<string, OutputChannel>();\n    protected readonly resources = new Map<string, OutputResource>();\n    protected _selectedChannel: OutputChannel | undefined;\n\n    protected readonly channelAddedEmitter = new Emitter<{ name: string }>();\n    protected readonly channelDeletedEmitter = new Emitter<{ name: string }>();\n    protected readonly channelWasShownEmitter = new Emitter<{ name: string, preserveFocus?: boolean }>();\n    protected readonly channelWasHiddenEmitter = new Emitter<{ name: string }>();\n    protected readonly selectedChannelChangedEmitter = new Emitter<{ name: string } | undefined>();\n\n    readonly onChannelAdded = this.channelAddedEmitter.event;\n    readonly onChannelDeleted = this.channelDeletedEmitter.event;\n    readonly onChannelWasShown = this.channelWasShownEmitter.event;\n    readonly onChannelWasHidden = this.channelWasHiddenEmitter.event;\n    readonly onSelectedChannelChanged = this.selectedChannelChangedEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toDisposeOnChannelDeletion = new Map<string, Disposable>();\n\n    getChannel(name: string): OutputChannel {\n        const existing = this.channels.get(name);\n        if (existing) {\n            return existing;\n        }\n\n        // We have to register the resource first, because `textModelService#createModelReference` will require it\n        // right after creating the monaco.editor.ITextModel.\n        // All `append` and `appendLine` will be deferred until the underlying text-model instantiation.\n        let resource = this.resources.get(name);\n        if (!resource) {\n            const uri = OutputUri.create(name);\n            const editorModelRef = new Deferred<IReference<MonacoEditorModel>>();\n            resource = this.createResource({ uri, editorModelRef });\n            this.resources.set(name, resource);\n            this.textModelService.createModelReference(uri).then(ref => editorModelRef.resolve(ref));\n        }\n\n        const channel = this.createChannel(resource);\n        this.channels.set(name, channel);\n        this.toDisposeOnChannelDeletion.set(name, this.registerListeners(channel));\n        if (!this.selectedChannel) {\n            this.selectedChannel = channel;\n        }\n        this.channelAddedEmitter.fire(channel);\n        return channel;\n    }\n\n    protected registerListeners(channel: OutputChannel): Disposable {\n        const { name } = channel;\n        return new DisposableCollection(\n            channel,\n            channel.onVisibilityChange(({ isVisible, preserveFocus }) => {\n                if (isVisible) {\n                    this.selectedChannel = channel;\n                    this.channelWasShownEmitter.fire({ name, preserveFocus });\n                } else {\n                    if (channel === this.selectedChannel) {\n                        this.selectedChannel = this.getVisibleChannels()[0];\n                    }\n                    this.channelWasHiddenEmitter.fire({ name });\n                }\n            }),\n            channel.onDisposed(() => this.deleteChannel(name)),\n            Disposable.create(() => {\n                const resource = this.resources.get(name);\n                if (resource) {\n                    resource.dispose();\n                    this.resources.delete(name);\n                } else {\n                    console.warn(`Could not dispose. No resource was for output channel: '${name}'.`);\n                }\n            }),\n            Disposable.create(() => {\n                const toDispose = this.channels.get(name);\n                if (!toDispose) {\n                    console.warn(`Could not dispose. No channel exist with name: '${name}'.`);\n                    return;\n                }\n                this.channels.delete(name);\n                toDispose.dispose();\n                this.channelDeletedEmitter.fire({ name });\n                if (this.selectedChannel && this.selectedChannel.name === name) {\n                    this.selectedChannel = this.getVisibleChannels()[0];\n                }\n            })\n        );\n    }\n\n    deleteChannel(name: string): void {\n        const toDispose = this.toDisposeOnChannelDeletion.get(name);\n        if (toDispose) {\n            toDispose.dispose();\n        }\n    }\n\n    getChannels(): OutputChannel[] {\n        return Array.from(this.channels.values()).sort(this.channelComparator);\n    }\n\n    getVisibleChannels(): OutputChannel[] {\n        return this.getChannels().filter(channel => channel.isVisible);\n    }\n\n    protected get channelComparator(): (left: OutputChannel, right: OutputChannel) => number {\n        return (left, right) => {\n            if (left.isVisible !== right.isVisible) {\n                return left.isVisible ? -1 : 1;\n            }\n            return left.name.toLocaleLowerCase().localeCompare(right.name.toLocaleLowerCase());\n        };\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get selectedChannel(): OutputChannel | undefined {\n        return this._selectedChannel;\n    }\n\n    set selectedChannel(channel: OutputChannel | undefined) {\n        this._selectedChannel = channel;\n        if (this._selectedChannel) {\n            this.selectedChannelChangedEmitter.fire({ name: this._selectedChannel.name });\n        } else {\n            this.selectedChannelChangedEmitter.fire(undefined);\n        }\n    }\n\n    /**\n     * Non-API: do not call directly.\n     */\n    async resolve(uri: URI): Promise<Resource> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const resource = this.resources.get(OutputUri.channelName(uri));\n        if (!resource) {\n            throw new Error(`No output resource was registered with URI: ${uri.toString()}`);\n        }\n        return resource;\n    }\n\n    protected createResource({ uri, editorModelRef }: { uri: URI, editorModelRef: Deferred<IReference<MonacoEditorModel>> }): OutputResource {\n        return new OutputResource(uri, editorModelRef);\n    }\n\n    protected createChannel(resource: OutputResource): OutputChannel {\n        return new OutputChannel(resource, this.preferences);\n    }\n\n}\n\nexport enum OutputChannelSeverity {\n    Error = 1,\n    Warning = 2,\n    Info = 3\n}\n\nexport class OutputChannel implements Disposable {\n\n    protected readonly contentChangeEmitter = new Emitter<void>();\n    protected readonly visibilityChangeEmitter = new Emitter<{ isVisible: boolean, preserveFocus?: boolean }>();\n    protected readonly disposedEmitter = new Emitter<void>();\n    protected readonly textModifyQueue = new PQueue({ autoStart: true, concurrency: 1 });\n    protected readonly toDispose = new DisposableCollection(\n        Disposable.create(() => this.textModifyQueue.clear()),\n        this.contentChangeEmitter,\n        this.visibilityChangeEmitter,\n        this.disposedEmitter\n    );\n\n    protected disposed = false;\n    protected visible = true;\n    protected _maxLineNumber: number;\n    protected decorationIds = new Set<string>();\n\n    readonly onVisibilityChange: Event<{ isVisible: boolean, preserveFocus?: boolean }> = this.visibilityChangeEmitter.event;\n    readonly onContentChange: Event<void> = this.contentChangeEmitter.event;\n    readonly onDisposed: Event<void> = this.disposedEmitter.event;\n\n    constructor(protected readonly resource: OutputResource, protected readonly preferences: OutputPreferences) {\n        this._maxLineNumber = this.preferences['output.maxChannelHistory'];\n        this.toDispose.push(resource);\n        this.toDispose.push(Disposable.create(() => this.decorationIds.clear()));\n        this.toDispose.push(this.preferences.onPreferenceChanged(event => {\n            if (event.preferenceName === 'output.maxChannelHistory') {\n                const maxLineNumber = event.newValue;\n                if (this.maxLineNumber !== maxLineNumber) {\n                    this.maxLineNumber = maxLineNumber;\n                }\n            }\n        }));\n    }\n\n    get name(): string {\n        return OutputUri.channelName(this.uri);\n    }\n\n    get uri(): URI {\n        return this.resource.uri;\n    }\n\n    hide(): void {\n        this.visible = false;\n        this.visibilityChangeEmitter.fire({ isVisible: this.isVisible });\n    }\n\n    /**\n     * If `preserveFocus` is `true`, the channel will not take focus. It is `false` by default.\n     *  - Calling `show` without args or with `preserveFocus: false` will reveal **and** activate the `Output` widget.\n     *  - Calling `show` with `preserveFocus: true` will reveal the `Output` widget but **won't** activate it.\n     */\n    show({ preserveFocus }: { preserveFocus: boolean } = { preserveFocus: false }): void {\n        this.visible = true;\n        this.visibilityChangeEmitter.fire({ isVisible: this.isVisible, preserveFocus });\n    }\n\n    /**\n     * Note: if `false` it does not meant it is disposed or not available, it is only hidden from the UI.\n     */\n    get isVisible(): boolean {\n        return this.visible;\n    }\n\n    clear(): void {\n        this.textModifyQueue.add(async () => {\n            const textModel = (await this.resource.editorModelRef.promise).object.textEditorModel;\n            textModel.deltaDecorations(Array.from(this.decorationIds), []);\n            this.decorationIds.clear();\n            textModel.setValue('');\n            this.contentChangeEmitter.fire();\n        });\n    }\n\n    dispose(): void {\n        if (this.disposed) {\n            return;\n        }\n        this.disposed = true;\n        this.toDispose.dispose();\n        this.disposedEmitter.fire();\n    }\n\n    append(content: string, severity: OutputChannelSeverity = OutputChannelSeverity.Info): void {\n        this.textModifyQueue.add(() => this.doAppend({ content, severity }));\n    }\n\n    appendLine(content: string, severity: OutputChannelSeverity = OutputChannelSeverity.Info): void {\n        this.textModifyQueue.add(() => this.doAppend({ content, severity, appendEol: true }));\n    }\n\n    protected async doAppend({ content, severity, appendEol }: { content: string, severity: OutputChannelSeverity, appendEol?: boolean }): Promise<void> {\n        const textModel = (await this.resource.editorModelRef.promise).object.textEditorModel;\n        const lastLine = textModel.getLineCount();\n        const lastLineMaxColumn = textModel.getLineMaxColumn(lastLine);\n        const position = new monaco.Position(lastLine, lastLineMaxColumn);\n        const range = new monaco.Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const edits = [{\n            range,\n            text: !!appendEol ? `${content}${textModel.getEOL()}` : content,\n            forceMoveMarkers: true\n        }];\n        // We do not use `pushEditOperations` as we do not need undo/redo support. VS Code uses `applyEdits` too.\n        // https://github.com/microsoft/vscode/blob/dc348340fd1a6c583cb63a1e7e6b4fd657e01e01/src/vs/workbench/services/output/common/outputChannelModel.ts#L108-L115\n        textModel.applyEdits(edits);\n        if (severity !== OutputChannelSeverity.Info) {\n            const inlineClassName = severity === OutputChannelSeverity.Error ? 'theia-output-error' : 'theia-output-warning';\n            let endLineNumber = textModel.getLineCount();\n            // If last line is empty (the first non-whitespace is 0), apply decorator to previous line's last non-whitespace instead\n            // Note: if the user appends `inlineWarning `, the new decorator's range includes the trailing whitespace.\n            if (!textModel.getLineFirstNonWhitespaceColumn(endLineNumber)) {\n                endLineNumber--;\n            }\n            const endColumn = textModel.getLineLastNonWhitespaceColumn(endLineNumber);\n            const newDecorations = [{\n                range: new monaco.Range(range.startLineNumber, range.startColumn, endLineNumber, endColumn), options: {\n                    inlineClassName\n                }\n            }];\n            for (const decorationId of textModel.deltaDecorations([], newDecorations)) {\n                this.decorationIds.add(decorationId);\n            }\n        }\n        this.ensureMaxChannelHistory(textModel);\n        this.contentChangeEmitter.fire();\n    }\n\n    protected ensureMaxChannelHistory(textModel: monaco.editor.ITextModel): void {\n        this.contentChangeEmitter.fire();\n        const linesToRemove = textModel.getLineCount() - this.maxLineNumber - 1; // -1 as the last line is usually empty -> `appendLine`.\n        if (linesToRemove > 0) {\n            const endColumn = textModel.getLineMaxColumn(linesToRemove);\n            // `endLineNumber` is `linesToRemove` + 1 as monaco is one based.\n            const range = new monaco.Range(1, 1, linesToRemove, endColumn + 1);\n            // eslint-disable-next-line no-null/no-null\n            const text = null;\n            const decorationsToRemove = textModel.getLinesDecorations(range.startLineNumber, range.endLineNumber)\n                .filter(({ id }) => this.decorationIds.has(id)).map(({ id }) => id); // Do we need to filter here? Who else can put decorations to the output model?\n            if (decorationsToRemove.length) {\n                for (const newId of textModel.deltaDecorations(decorationsToRemove, [])) {\n                    this.decorationIds.add(newId);\n                }\n                for (const toRemoveId of decorationsToRemove) {\n                    this.decorationIds.delete(toRemoveId);\n                }\n            }\n            textModel.applyEdits([\n                {\n                    range: new monaco.Range(1, 1, linesToRemove + 1, textModel.getLineFirstNonWhitespaceColumn(linesToRemove + 1)),\n                    text,\n                    forceMoveMarkers: true\n                }\n            ]);\n        }\n    }\n\n    protected get maxLineNumber(): number {\n        return this._maxLineNumber;\n    }\n\n    protected set maxLineNumber(maxLineNumber: number) {\n        this._maxLineNumber = maxLineNumber;\n        this.append(''); // will trigger an `ensureMaxChannelHistory` call and will refresh the content.\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { codicon } from '@theia/core/lib/browser';\nimport { Command, nls } from '@theia/core/lib/common';\n\nexport namespace OutputCommands {\n\n    const OUTPUT_CATEGORY = 'Output';\n    const OUTPUT_CATEGORY_KEY = nls.getDefaultKey(OUTPUT_CATEGORY);\n\n    /* #region VS Code `OutputChannel` API */\n    // Based on: https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/vscode.d.ts#L4692-L4745\n\n    export const APPEND: Command = {\n        id: 'output:append'\n    };\n\n    export const APPEND_LINE: Command = {\n        id: 'output:appendLine'\n    };\n\n    export const CLEAR: Command = {\n        id: 'output:clear'\n    };\n\n    export const SHOW: Command = {\n        id: 'output:show'\n    };\n\n    export const HIDE: Command = {\n        id: 'output:hide'\n    };\n\n    export const DISPOSE: Command = {\n        id: 'output:dispose'\n    };\n\n    /* #endregion VS Code `OutputChannel` API */\n\n    export const CLEAR__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:clear',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('clear-all')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const LOCK__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:lock',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('unlock')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const UNLOCK__WIDGET = Command.toLocalizedCommand({\n        id: 'output:widget:unlock',\n        category: OUTPUT_CATEGORY,\n        iconClass: codicon('lock')\n    }, '', OUTPUT_CATEGORY_KEY);\n\n    export const CLEAR__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-clear',\n        label: 'Clear Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/clearOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const SHOW__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-show',\n        label: 'Show Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/showOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const HIDE__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-hide',\n        label: 'Hide Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/hideOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const DISPOSE__QUICK_PICK = Command.toLocalizedCommand({\n        id: 'output:pick-dispose',\n        label: 'Close Output Channel...',\n        category: OUTPUT_CATEGORY\n    }, 'theia/output/closeOutputChannel', OUTPUT_CATEGORY_KEY);\n\n    export const COPY_ALL: Command = {\n        id: 'output:copy-all',\n    };\n\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\n\nexport namespace OutputContextMenu {\n    export const MENU_PATH: MenuPath = ['output_context_menu'];\n    export const TEXT_EDIT_GROUP = [...MENU_PATH, '0_text_edit_group'];\n    export const COMMAND_GROUP = [...MENU_PATH, '1_command_group'];\n    export const WIDGET_GROUP = [...MENU_PATH, '2_widget_group'];\n}\n\n@injectable()\nexport class OutputContextMenuService extends MonacoContextMenuService {\n\n    protected override menuPath(): MenuPath {\n        return OutputContextMenu.MENU_PATH;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { CommonCommands, quickCommand, OpenHandler, open, OpenerOptions, OpenerService, QuickPickItem, QuickPickValue } from '@theia/core/lib/browser';\nimport { CommandRegistry, MenuModelRegistry, CommandService } from '@theia/core/lib/common';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OutputWidget } from './output-widget';\nimport { OutputContextMenu } from './output-context-menu';\nimport { OutputUri } from '../common/output-uri';\nimport { ClipboardService } from '@theia/core/lib/browser/clipboard-service';\nimport { OutputChannelManager, OutputChannel } from './output-channel';\nimport { OutputCommands } from './output-commands';\nimport { QuickPickSeparator, QuickPickService } from '@theia/core/lib/common/quick-pick-service';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> implements OpenHandler {\n\n    @inject(ClipboardService)\n    protected readonly clipboardService: ClipboardService;\n\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    readonly id: string = `${OutputWidget.ID}-opener`;\n\n    constructor() {\n        super({\n            widgetId: OutputWidget.ID,\n            widgetName: OutputWidget.LABEL,\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'CtrlCmd+Shift+U'\n        });\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.outputChannelManager.onChannelWasShown(({ name, preserveFocus }) =>\n            open(this.openerService, OutputUri.create(name), { activate: !preserveFocus, reveal: true }));\n    }\n\n    override registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(OutputCommands.CLEAR__WIDGET, {\n            isEnabled: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            isVisible: arg => {\n                if (arg instanceof Widget) {\n                    return arg instanceof OutputWidget;\n                }\n                return this.shell.currentWidget instanceof OutputWidget;\n            },\n            execute: () => {\n                this.widget.then(widget => {\n                    this.withWidget(widget, output => {\n                        output.clear();\n                        return true;\n                    });\n                });\n            }\n        });\n        registry.registerCommand(OutputCommands.LOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => !output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => !output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.lock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.UNLOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => output.isLocked),\n            execute: widget => this.withWidget(widget, output => {\n                output.unlock();\n                return true;\n            })\n        });\n        registry.registerCommand(OutputCommands.COPY_ALL, {\n            execute: () => {\n                const textToCopy = this.tryGetWidget()?.getText();\n                if (textToCopy) {\n                    this.clipboardService.writeText(textToCopy);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.outputChannelManager.getChannel(name).append(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND_LINE, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.outputChannelManager.getChannel(name).appendLine(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.CLEAR, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.getChannel(name).clear();\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.DISPOSE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.deleteChannel(name);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.SHOW, {\n            execute: ({ name, options }: { name: string, options?: { preserveFocus?: boolean } }) => {\n                if (name) {\n                    const preserveFocus = options && options.preserveFocus || false;\n                    this.outputChannelManager.getChannel(name).show({ preserveFocus });\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.HIDE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.outputChannelManager.getChannel(name).hide();\n                }\n            }\n        });\n\n        registry.registerCommand(OutputCommands.CLEAR__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.CLEAR__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    channel.clear();\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.SHOW__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.SHOW__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.SHOW.id, { name, options: { preserveFocus: false } });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.HIDE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.HIDE__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getVisibleChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.HIDE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getVisibleChannels().length,\n            isVisible: () => !!this.outputChannelManager.getVisibleChannels().length\n        });\n        registry.registerCommand(OutputCommands.DISPOSE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: OutputCommands.DISPOSE__QUICK_PICK.label!,\n                    channels: this.outputChannelManager.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.DISPOSE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.outputChannelManager.getChannels().length,\n            isVisible: () => !!this.outputChannelManager.getChannels().length\n        });\n    }\n\n    override registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: CommonCommands.COPY.id\n        });\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: OutputCommands.COPY_ALL.id,\n            label: nls.localizeByDefault('Copy All')\n        });\n        registry.registerMenuAction(OutputContextMenu.COMMAND_GROUP, {\n            commandId: quickCommand.id,\n            label: nls.localizeByDefault('Command Palette...')\n        });\n        registry.registerMenuAction(OutputContextMenu.WIDGET_GROUP, {\n            commandId: OutputCommands.CLEAR__WIDGET.id,\n            label: nls.localizeByDefault('Clear Output')\n        });\n    }\n\n    canHandle(uri: URI): MaybePromise<number> {\n        return OutputUri.is(uri) ? 200 : 0;\n    }\n\n    async open(uri: URI, options?: OpenerOptions): Promise<OutputWidget> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const widget = await this.openView(options);\n        return widget;\n    }\n\n    protected withWidget(\n        widget: Widget | undefined = this.tryGetWidget(),\n        predicate: (output: OutputWidget) => boolean = () => true\n    ): boolean | false {\n        return widget instanceof OutputWidget ? predicate(widget) : false;\n    }\n\n    protected async pick({ channels, placeholder }: { channels: OutputChannel[], placeholder: string }): Promise<OutputChannel | undefined> {\n        const items: Array<QuickPickValue<OutputChannel> | QuickPickItem | QuickPickSeparator> = [];\n        const outputChannels = nls.localize('theia/output/outputChannels', 'Output Channels');\n        const hiddenChannels = nls.localize('theia/output/hiddenChannels', 'Hidden Channels');\n        for (let i = 0; i < channels.length; i++) {\n            const channel = channels[i];\n            if (i === 0) {\n                items.push({ label: channel.isVisible ? outputChannels : hiddenChannels, type: 'separator' });\n            } else if (!channel.isVisible && channels[i - 1].isVisible) {\n                items.push({ label: hiddenChannels, type: 'separator' });\n            }\n            items.push({ label: channel.name, value: channel });\n        }\n        const selectedItem = await this.quickPickService.show(items, { placeholder });\n        return selectedItem && ('value' in selectedItem) ? selectedItem.value : undefined;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoEditorFactory } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\nimport { EditorServiceOverrides, MonacoEditor, MonacoEditorServices } from '@theia/monaco/lib/browser/monaco-editor';\nimport { OutputUri } from '../common/output-uri';\nimport { OutputContextMenuService } from './output-context-menu';\nimport { IContextMenuService } from '@theia/monaco-editor-core/esm/vs/platform/contextview/browser/contextView';\n\n@injectable()\nexport class OutputEditorFactory implements MonacoEditorFactory {\n\n    @inject(MonacoEditorServices)\n    protected readonly services: MonacoEditorServices;\n\n    @inject(OutputContextMenuService)\n    protected readonly contextMenuService: MonacoContextMenuService;\n\n    readonly scheme: string = OutputUri.SCHEME;\n\n    create(model: MonacoEditorModel, defaultsOptions: MonacoEditor.IOptions): Promise<MonacoEditor> {\n        const uri = new URI(model.uri);\n        const options = this.createOptions(model, defaultsOptions);\n        const overrides = this.createOverrides(model);\n        return MonacoEditor.create(uri, model, document.createElement('div'), this.services, options, overrides);\n    }\n\n    protected createOptions(model: MonacoEditorModel, defaultOptions: MonacoEditor.IOptions): MonacoEditor.IOptions {\n        return {\n            ...defaultOptions,\n            overviewRulerLanes: 3,\n            lineNumbersMinChars: 3,\n            fixedOverflowWidgets: true,\n            wordWrap: 'off',\n            lineNumbers: 'off',\n            glyphMargin: false,\n            lineDecorationsWidth: 20,\n            rulers: [],\n            folding: false,\n            scrollBeyondLastLine: false,\n            readOnly: true,\n            renderLineHighlight: 'none',\n            minimap: { enabled: false },\n            matchBrackets: 'never'\n        };\n    }\n\n    protected *createOverrides(model: MonacoEditorModel): EditorServiceOverrides {\n        yield [IContextMenuService, this.contextMenuService];\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable } from '@theia/core/shared/inversify';\nimport { Resource } from '@theia/core/lib/common/resource';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { OutputUri } from '../common/output-uri';\nimport { MonacoEditorModelFactory } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { MonacoToProtocolConverter } from '@theia/monaco/lib/browser/monaco-to-protocol-converter';\nimport { ProtocolToMonacoConverter } from '@theia/monaco/lib/browser/protocol-to-monaco-converter';\n\n@injectable()\nexport class OutputEditorModelFactory implements MonacoEditorModelFactory {\n\n    @inject(MonacoToProtocolConverter)\n    protected readonly m2p: MonacoToProtocolConverter;\n\n    @inject(ProtocolToMonacoConverter)\n    protected readonly p2m: ProtocolToMonacoConverter;\n\n    readonly scheme: string = OutputUri.SCHEME;\n\n    createModel(\n        resource: Resource\n    ): MonacoEditorModel {\n        return new OutputEditorModel(resource, this.m2p, this.p2m);\n    }\n\n}\n\nexport class OutputEditorModel extends MonacoEditorModel {\n\n    override get readOnly(): boolean {\n        return true;\n    }\n\n    protected override setDirty(dirty: boolean): void {\n        // NOOP\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ContainerModule } from '@theia/core/shared/inversify';\nimport { OutputWidget } from './output-widget';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { ResourceResolver } from '@theia/core/lib/common';\nimport { WidgetFactory, bindViewContribution, OpenHandler } from '@theia/core/lib/browser';\nimport { OutputChannelManager } from './output-channel';\nimport { bindOutputPreferences } from './output-preferences';\nimport { OutputToolbarContribution } from './output-toolbar-contribution';\nimport { OutputContribution } from './output-contribution';\nimport { MonacoEditorFactory } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { OutputContextMenuService } from './output-context-menu';\nimport { OutputEditorFactory } from './output-editor-factory';\nimport { MonacoEditorModelFactory } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { OutputEditorModelFactory } from './output-editor-model-factory';\n\nexport default new ContainerModule(bind => {\n    bind(OutputChannelManager).toSelf().inSingletonScope();\n    bind(ResourceResolver).toService(OutputChannelManager);\n    bind(OutputEditorFactory).toSelf().inSingletonScope();\n    bind(MonacoEditorFactory).toService(OutputEditorFactory);\n    bind(OutputEditorModelFactory).toSelf().inSingletonScope();\n    bind(MonacoEditorModelFactory).toService(OutputEditorModelFactory);\n    bind(OutputContextMenuService).toSelf().inSingletonScope();\n\n    bindOutputPreferences(bind);\n\n    bind(OutputWidget).toSelf();\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: OutputWidget.ID,\n        createWidget: () => context.container.get<OutputWidget>(OutputWidget)\n    }));\n    bindViewContribution(bind, OutputContribution);\n    bind(OpenHandler).to(OutputContribution).inSingletonScope();\n\n    bind(OutputToolbarContribution).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(OutputToolbarContribution);\n});\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    PreferenceContribution,\n    PreferenceProxy,\n    PreferenceSchema,\n    PreferenceService,\n    createPreferenceProxy\n} from '@theia/core/lib/browser/preferences';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const OutputConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'output.maxChannelHistory': {\n            'type': 'number',\n            'description': nls.localize('theia/output/maxChannelHistory', 'The maximum number of entries in an output channel.'),\n            'default': 1000\n        }\n    }\n};\n\nexport interface OutputConfiguration {\n    'output.maxChannelHistory': number\n}\n\nexport const OutputPreferenceContribution = Symbol('OutputPreferenceContribution');\nexport const OutputPreferences = Symbol('OutputPreferences');\nexport type OutputPreferences = PreferenceProxy<OutputConfiguration>;\n\nexport function createOutputPreferences(preferences: PreferenceService, schema: PreferenceSchema = OutputConfigSchema): OutputPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindOutputPreferences(bind: interfaces.Bind): void {\n    bind(OutputPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(OutputPreferenceContribution);\n        return createOutputPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(OutputPreferenceContribution).toConstantValue({ schema: OutputConfigSchema });\n    bind(PreferenceContribution).toService(OutputPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Event, Resource, ResourceReadOptions, DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { IReference } from '@theia/monaco-editor-core/esm/vs/base/common/lifecycle';\nimport * as monaco from '@theia/monaco-editor-core';\n\nexport class OutputResource implements Resource {\n\n    protected _textModel: monaco.editor.ITextModel | undefined;\n    protected onDidChangeContentsEmitter = new Emitter<void>();\n    protected toDispose = new DisposableCollection(\n        this.onDidChangeContentsEmitter\n    );\n\n    constructor(readonly uri: URI, readonly editorModelRef: Deferred<IReference<MonacoEditorModel>>) {\n        this.editorModelRef.promise.then(modelRef => {\n            if (this.toDispose.disposed) {\n                modelRef.dispose();\n                return;\n            }\n            const textModel = modelRef.object.textEditorModel;\n            this._textModel = textModel;\n            this.toDispose.push(modelRef);\n            this.toDispose.push(this._textModel!.onDidChangeContent(() => this.onDidChangeContentsEmitter.fire()));\n        });\n    }\n\n    get textModel(): monaco.editor.ITextModel | undefined {\n        return this._textModel;\n    }\n\n    get onDidChangeContents(): Event<void> {\n        return this.onDidChangeContentsEmitter.event;\n    }\n\n    async readContents(options?: ResourceReadOptions): Promise<string> {\n        if (this._textModel) {\n            const modelRef = await this.editorModelRef.promise;\n            return modelRef.object.textEditorModel.getValue();\n        }\n        return '';\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Arm and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport * as React from '@theia/core/shared/react';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { Emitter } from '@theia/core/lib/common/event';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectComponent, SelectOption } from '@theia/core/lib/browser/widgets/select-component';\nimport { OutputWidget } from './output-widget';\nimport { OutputCommands } from './output-commands';\nimport { OutputContribution } from './output-contribution';\nimport { OutputChannelManager } from './output-channel';\nimport { nls } from '@theia/core/lib/common/nls';\n\n@injectable()\nexport class OutputToolbarContribution implements TabBarToolbarContribution {\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    @inject(OutputContribution)\n    protected readonly outputContribution: OutputContribution;\n\n    protected readonly onOutputWidgetStateChangedEmitter = new Emitter<void>();\n    protected readonly onOutputWidgetStateChanged = this.onOutputWidgetStateChangedEmitter.event;\n\n    protected readonly onChannelsChangedEmitter = new Emitter<void>();\n    protected readonly onChannelsChanged = this.onChannelsChangedEmitter.event;\n\n    @postConstruct()\n    protected init(): void {\n        this.outputContribution.widget.then(widget => {\n            widget.onStateChanged(() => this.onOutputWidgetStateChangedEmitter.fire());\n        });\n        const fireChannelsChanged = () => this.onChannelsChangedEmitter.fire();\n        this.outputChannelManager.onSelectedChannelChanged(fireChannelsChanged);\n        this.outputChannelManager.onChannelAdded(fireChannelsChanged);\n        this.outputChannelManager.onChannelDeleted(fireChannelsChanged);\n        this.outputChannelManager.onChannelWasShown(fireChannelsChanged);\n        this.outputChannelManager.onChannelWasHidden(fireChannelsChanged);\n    }\n\n    registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): void {\n        toolbarRegistry.registerItem({\n            id: 'channels',\n            render: () => this.renderChannelSelector(),\n            isVisible: widget => widget instanceof OutputWidget,\n            onDidChange: this.onChannelsChanged\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.CLEAR__WIDGET.id,\n            command: OutputCommands.CLEAR__WIDGET.id,\n            tooltip: nls.localizeByDefault('Clear Output'),\n            priority: 1,\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.LOCK__WIDGET.id,\n            command: OutputCommands.LOCK__WIDGET.id,\n            tooltip: nls.localizeByDefault('Turn Auto Scrolling Off'),\n            onDidChange: this.onOutputWidgetStateChanged,\n            priority: 2\n        });\n        toolbarRegistry.registerItem({\n            id: OutputCommands.UNLOCK__WIDGET.id,\n            command: OutputCommands.UNLOCK__WIDGET.id,\n            tooltip: nls.localizeByDefault('Turn Auto Scrolling On'),\n            onDidChange: this.onOutputWidgetStateChanged,\n            priority: 2\n        });\n    }\n\n    protected readonly NONE = '<no channels>';\n    protected readonly OUTPUT_CHANNEL_LIST_ID = 'outputChannelList';\n\n    protected renderChannelSelector(): React.ReactNode {\n        const channelOptionElements: SelectOption[] = [];\n        this.outputChannelManager.getVisibleChannels().forEach((channel, i) => {\n            channelOptionElements.push({\n                value: channel.name\n            });\n        });\n        if (channelOptionElements.length === 0) {\n            channelOptionElements.push({\n                value: this.NONE\n            });\n        }\n        return <div id={this.OUTPUT_CHANNEL_LIST_ID} key={this.OUTPUT_CHANNEL_LIST_ID}>\n            <SelectComponent\n                key={this.outputChannelManager.selectedChannel?.name}\n                options={channelOptionElements}\n                defaultValue={this.outputChannelManager.selectedChannel?.name}\n                onChange={option => this.changeChannel(option)}\n            />\n        </div>;\n    }\n\n    protected changeChannel = (option: SelectOption) => {\n        const channelName = option.value;\n        if (channelName !== this.NONE && channelName) {\n            this.outputChannelManager.getChannel(channelName).show();\n        }\n    };\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport '../../src/browser/style/output.css';\nimport { inject, injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { toArray } from '@theia/core/shared/@lumino/algorithm';\nimport { EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Message, BaseWidget, DockPanel, Widget, MessageLoop, StatefulWidget, codicon } from '@theia/core/lib/browser';\nimport { OutputUri } from '../common/output-uri';\nimport { OutputChannelManager, OutputChannel } from './output-channel';\nimport { Emitter, Event, deepClone } from '@theia/core';\nimport { nls } from '@theia/core/lib/common/nls';\nimport * as monaco from '@theia/monaco-editor-core';\n\n@injectable()\nexport class OutputWidget extends BaseWidget implements StatefulWidget {\n\n    static readonly ID = 'outputView';\n    static readonly LABEL = nls.localizeByDefault('Output');\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(MonacoEditorProvider)\n    protected readonly editorProvider: MonacoEditorProvider;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    protected _state: OutputWidget.State = { locked: false };\n    protected readonly editorContainer: DockPanel;\n    protected readonly toDisposeOnSelectedChannelChanged = new DisposableCollection();\n    protected readonly onStateChangedEmitter = new Emitter<OutputWidget.State>();\n\n    constructor() {\n        super();\n        this.id = OutputWidget.ID;\n        this.title.label = OutputWidget.LABEL;\n        this.title.caption = OutputWidget.LABEL;\n        this.title.iconClass = codicon('output');\n        this.title.closable = true;\n        this.addClass('theia-output');\n        this.node.tabIndex = 0;\n        this.editorContainer = new NoopDragOverDockPanel({ spacing: 0, mode: 'single-document' });\n        this.editorContainer.addClass('editor-container');\n        this.editorContainer.node.tabIndex = -1;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.pushAll([\n            this.outputChannelManager.onChannelAdded(() => this.refreshEditorWidget()),\n            this.outputChannelManager.onChannelDeleted(() => this.refreshEditorWidget()),\n            this.outputChannelManager.onChannelWasHidden(() => this.refreshEditorWidget()),\n            this.outputChannelManager.onChannelWasShown(({ preserveFocus }) => this.refreshEditorWidget({ preserveFocus: !!preserveFocus })),\n            this.toDisposeOnSelectedChannelChanged,\n            this.onStateChangedEmitter,\n            this.onStateChanged(() => this.update())\n        ]);\n        this.refreshEditorWidget();\n    }\n\n    storeState(): object {\n        return this.state;\n    }\n\n    restoreState(oldState: object & Partial<OutputWidget.State>): void {\n        const copy = deepClone(this.state);\n        if (oldState.locked) {\n            copy.locked = oldState.locked;\n        }\n        this.state = copy;\n    }\n\n    protected get state(): OutputWidget.State {\n        return this._state;\n    }\n\n    protected set state(state: OutputWidget.State) {\n        this._state = state;\n        this.onStateChangedEmitter.fire(this._state);\n    }\n\n    protected async refreshEditorWidget({ preserveFocus }: { preserveFocus: boolean } = { preserveFocus: false }): Promise<void> {\n        const { selectedChannel } = this;\n        const editorWidget = this.editorWidget;\n        if (selectedChannel && editorWidget) {\n            // If the input is the current one, do nothing.\n            const model = (editorWidget.editor as MonacoEditor).getControl().getModel();\n            if (model && model.uri.toString() === selectedChannel.uri.toString()) {\n                if (!preserveFocus) {\n                    this.activate();\n                }\n                return;\n            }\n        }\n        this.toDisposeOnSelectedChannelChanged.dispose();\n        if (selectedChannel) {\n            const widget = await this.createEditorWidget();\n            if (widget) {\n                this.editorContainer.addWidget(widget);\n                this.toDisposeOnSelectedChannelChanged.pushAll([\n                    Disposable.create(() => widget.close()),\n                    selectedChannel.onContentChange(() => this.revealLastLine())\n                ]);\n                if (!preserveFocus) {\n                    this.activate();\n                }\n                this.revealLastLine();\n            }\n        }\n    }\n\n    protected override onAfterAttach(message: Message): void {\n        super.onAfterAttach(message);\n        Widget.attach(this.editorContainer, this.node);\n        this.toDisposeOnDetach.push(Disposable.create(() => Widget.detach(this.editorContainer)));\n    }\n\n    protected override onActivateRequest(message: Message): void {\n        super.onActivateRequest(message);\n        if (this.editor) {\n            this.editor.focus();\n        } else {\n            this.node.focus();\n        }\n    }\n\n    protected override onResize(message: Widget.ResizeMessage): void {\n        super.onResize(message);\n        MessageLoop.sendMessage(this.editorContainer, Widget.ResizeMessage.UnknownSize);\n        for (const widget of toArray(this.editorContainer.widgets())) {\n            MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\n        }\n    }\n\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.onResize(Widget.ResizeMessage.UnknownSize); // Triggers an editor widget resize. (#8361)\n    }\n\n    get onStateChanged(): Event<OutputWidget.State> {\n        return this.onStateChangedEmitter.event;\n    }\n\n    clear(): void {\n        if (this.selectedChannel) {\n            this.selectedChannel.clear();\n        }\n    }\n\n    selectAll(): void {\n        const editor = this.editor;\n        if (editor) {\n            const model = editor.getControl().getModel();\n            if (model) {\n                const endLine = model.getLineCount();\n                const endCharacter = model.getLineMaxColumn(endLine);\n                editor.getControl().setSelection(new monaco.Range(1, 1, endLine, endCharacter));\n            }\n        }\n    }\n\n    lock(): void {\n        this.state = { ...deepClone(this.state), locked: true };\n    }\n\n    unlock(): void {\n        this.state = { ...deepClone(this.state), locked: false };\n    }\n\n    get isLocked(): boolean {\n        return !!this.state.locked;\n    }\n\n    protected revealLastLine(): void {\n        if (this.isLocked) {\n            return;\n        }\n        const editor = this.editor;\n        if (editor) {\n            const model = editor.getControl().getModel();\n            if (model) {\n                const lineNumber = model.getLineCount();\n                const column = model.getLineMaxColumn(lineNumber);\n                editor.getControl().revealPosition({ lineNumber, column }, monaco.editor.ScrollType.Smooth);\n            }\n        }\n    }\n\n    private get selectedChannel(): OutputChannel | undefined {\n        return this.outputChannelManager.selectedChannel;\n    }\n\n    private async createEditorWidget(): Promise<EditorWidget | undefined> {\n        if (!this.selectedChannel) {\n            return undefined;\n        }\n        const { name } = this.selectedChannel;\n        const editor = await this.editorProvider.get(OutputUri.create(name));\n        return new EditorWidget(editor, this.selectionService);\n    }\n\n    private get editorWidget(): EditorWidget | undefined {\n        for (const widget of toArray(this.editorContainer.children())) {\n            if (widget instanceof EditorWidget) {\n                return widget;\n            }\n        }\n        return undefined;\n    }\n\n    private get editor(): MonacoEditor | undefined {\n        return MonacoEditor.get(this.editorWidget);\n    }\n\n    getText(): string | undefined {\n        return this.editor?.getControl().getModel()?.getValue();\n    }\n\n}\n\nexport namespace OutputWidget {\n    export interface State {\n        locked?: boolean;\n    }\n}\n\n/**\n * Customized `DockPanel` that does not allow dropping widgets into it.\n */\nclass NoopDragOverDockPanel extends DockPanel { }\nNoopDragOverDockPanel.prototype['_evtDragOver'] = () => { };\nNoopDragOverDockPanel.prototype['_evtDrop'] = () => { };\nNoopDragOverDockPanel.prototype['_evtDragLeave'] = () => { };\n","// *****************************************************************************\n// Copyright (C) 2020 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0-only WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport namespace OutputUri {\n\n    export const SCHEME = 'output';\n\n    export function is(uri: string | URI): boolean {\n        if (uri instanceof URI) {\n            return uri.scheme === SCHEME;\n        }\n        return is(new URI(uri));\n    }\n\n    export function create(name: string): URI {\n        if (!name) {\n            throw new Error(\"'name' must be defined.\");\n        }\n        if (!name.trim().length) {\n            throw new Error(\"'name' must contain at least one non-whitespace character.\");\n        }\n        return new URI(encodeURIComponent(name)).withScheme(SCHEME);\n    }\n\n    export function channelName(uri: string | URI): string {\n        if (!is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        return (uri instanceof URI ? uri : new URI(uri)).toString(true).slice(`${OutputUri.SCHEME}:/`.length);\n    }\n\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./output.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n","import { EventEmitter } from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    #carryoverConcurrencyCount;\n    #isIntervalIgnored;\n    #intervalCount = 0;\n    #intervalCap;\n    #interval;\n    #intervalEnd = 0;\n    #intervalId;\n    #timeoutId;\n    #queue;\n    #queueClass;\n    #pending = 0;\n    // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n    #concurrency;\n    #isPaused;\n    #throwOnTimeout;\n    // Use to assign a unique identifier to a promise function, if not explicitly specified\n    #idAssigner = 1n;\n    /**\n    Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n\n    Applies to each future operation.\n    */\n    timeout;\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        super();\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap?.toString() ?? ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval?.toString() ?? ''}\\` (${typeof options.interval})`);\n        }\n        this.#carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this.#isIntervalIgnored = options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0;\n        this.#intervalCap = options.intervalCap;\n        this.#interval = options.interval;\n        this.#queue = new options.queueClass();\n        this.#queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        this.#throwOnTimeout = options.throwOnTimeout === true;\n        this.#isPaused = options.autoStart === false;\n    }\n    get #doesIntervalAllowAnother() {\n        return this.#isIntervalIgnored || this.#intervalCount < this.#intervalCap;\n    }\n    get #doesConcurrentAllowAnother() {\n        return this.#pending < this.#concurrency;\n    }\n    #next() {\n        this.#pending--;\n        this.#tryToStartAnother();\n        this.emit('next');\n    }\n    #onResumeInterval() {\n        this.#onInterval();\n        this.#initializeIntervalIfNeeded();\n        this.#timeoutId = undefined;\n    }\n    get #isIntervalPaused() {\n        const now = Date.now();\n        if (this.#intervalId === undefined) {\n            const delay = this.#intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this.#intervalCount = (this.#carryoverConcurrencyCount) ? this.#pending : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this.#timeoutId === undefined) {\n                    this.#timeoutId = setTimeout(() => {\n                        this.#onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #tryToStartAnother() {\n        if (this.#queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this.#intervalId) {\n                clearInterval(this.#intervalId);\n            }\n            this.#intervalId = undefined;\n            this.emit('empty');\n            if (this.#pending === 0) {\n                this.emit('idle');\n            }\n            return false;\n        }\n        if (!this.#isPaused) {\n            const canInitializeInterval = !this.#isIntervalPaused;\n            if (this.#doesIntervalAllowAnother && this.#doesConcurrentAllowAnother) {\n                const job = this.#queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this.#initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #initializeIntervalIfNeeded() {\n        if (this.#isIntervalIgnored || this.#intervalId !== undefined) {\n            return;\n        }\n        this.#intervalId = setInterval(() => {\n            this.#onInterval();\n        }, this.#interval);\n        this.#intervalEnd = Date.now() + this.#interval;\n    }\n    #onInterval() {\n        if (this.#intervalCount === 0 && this.#pending === 0 && this.#intervalId) {\n            clearInterval(this.#intervalId);\n            this.#intervalId = undefined;\n        }\n        this.#intervalCount = this.#carryoverConcurrencyCount ? this.#pending : 0;\n        this.#processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    #processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this.#tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this.#concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this.#concurrency = newConcurrency;\n        this.#processQueue();\n    }\n    async #throwOnAbort(signal) {\n        return new Promise((_resolve, reject) => {\n            signal.addEventListener('abort', () => {\n                reject(signal.reason);\n            }, { once: true });\n        });\n    }\n    /**\n    Updates the priority of a promise function by its id, affecting its execution order. Requires a defined concurrency limit to take effect.\n\n    For example, this can be used to prioritize a promise function to run earlier.\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 1});\n\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦀', {priority: 0, id: '🦀'});\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦄', {priority: 1});\n\n    queue.setPriority('🦀', 2);\n    ```\n\n    In this case, the promise function with `id: '🦀'` runs second.\n\n    You can also deprioritize a promise function to delay its execution:\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 1});\n\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦀', {priority: 1, id: '🦀'});\n    queue.add(async () => '🦄');\n    queue.add(async () => '🦄', {priority: 0});\n\n    queue.setPriority('🦀', -1);\n    ```\n    Here, the promise function with `id: '🦀'` executes last.\n    */\n    setPriority(id, priority) {\n        this.#queue.setPriority(id, priority);\n    }\n    async add(function_, options = {}) {\n        // In case `id` is not defined.\n        options.id ??= (this.#idAssigner++).toString();\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: this.#throwOnTimeout,\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            this.#queue.enqueue(async () => {\n                this.#pending++;\n                try {\n                    options.signal?.throwIfAborted();\n                    this.#intervalCount++;\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), { milliseconds: options.timeout });\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, this.#throwOnAbort(options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    this.#next();\n                }\n            }, options);\n            this.emit('add');\n            this.#tryToStartAnother();\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this.#isPaused) {\n            return this;\n        }\n        this.#isPaused = false;\n        this.#processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this.#isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this.#queue = new this.#queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (this.#queue.size < limit) {\n            return;\n        }\n        await this.#onEvent('next', () => this.#queue.size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.#pending === 0 && this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('idle');\n    }\n    async #onEvent(event, filter) {\n        return new Promise(resolve => {\n            const listener = () => {\n                if (filter && !filter()) {\n                    return;\n                }\n                this.off(event, listener);\n                resolve();\n            };\n            this.on(event, listener);\n        });\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return this.#queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return this.#queue.filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return this.#pending;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this.#isPaused;\n    }\n}\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","import lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    #queue = [];\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            id: options.id,\n            run,\n        };\n        if (this.size === 0 || this.#queue[this.size - 1].priority >= options.priority) {\n            this.#queue.push(element);\n            return;\n        }\n        const index = lowerBound(this.#queue, element, (a, b) => b.priority - a.priority);\n        this.#queue.splice(index, 0, element);\n    }\n    setPriority(id, priority) {\n        const index = this.#queue.findIndex((element) => element.id === id);\n        if (index === -1) {\n            throw new ReferenceError(`No promise function with the id \"${id}\" exists in the queue.`);\n        }\n        const [item] = this.#queue.splice(index, 1);\n        this.enqueue(item.run, { priority, id });\n    }\n    dequeue() {\n        const item = this.#queue.shift();\n        return item?.run;\n    }\n    filter(options) {\n        return this.#queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this.#queue.length;\n    }\n}\n","export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\tlet abortHandler;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tabortHandler = () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t};\n\n\t\t\tsignal.addEventListener('abort', abortHandler, {once: true});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t\tif (abortHandler && options.signal) {\n\t\t\toptions.signal.removeEventListener('abort', abortHandler);\n\t\t}\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n"],"names":[],"sourceRoot":""}