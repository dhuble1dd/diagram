/********************************************************************************
 * Copyright (c) 2023-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { WebSocketWrapper } from '@eclipse-glsp/protocol';
import { Channel, Disposable, DisposableCollection } from '@theia/core';
import { WebSocket } from 'ws';
/**
 * Creates a new vscode-jsonrpc {@link MessageConnection} on top of a given WebSocket.
 * It handles messages between then service client channel and the given WebSocket.
 */
export declare class WebSocketConnectionForwarder implements Disposable {
    protected readonly clientChannel: Channel;
    protected readonly webSocket: WebSocket;
    protected toDispose: DisposableCollection;
    protected initialChannelListener: Disposable;
    protected initialBufferStore: Uint8Array[];
    constructor(clientChannel: Channel, webSocket: WebSocket);
    protected initialize(webSocket: WebSocket): void;
    protected decodeMessage(buffer: Uint8Array): string;
    dispose(): void;
}
export declare function wrapWebSocket(socket: WebSocket): WebSocketWrapper;
//# sourceMappingURL=websocket-connection-forwarder.d.ts.map