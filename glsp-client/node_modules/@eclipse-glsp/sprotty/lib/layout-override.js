"use strict";
/********************************************************************************
 * Copyright (c) 2025 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HBoxLayouter = exports.VBoxLayouter = exports.AbstractLayout = exports.LayoutRegistry = void 0;
exports.configureLayout = configureLayout;
const inversify_1 = require("inversify");
const sprotty_1 = require("sprotty");
const abstract_layout_1 = require("sprotty/lib/features/bounds/abstract-layout");
let LayoutRegistry = class LayoutRegistry extends sprotty_1.InstanceRegistry {
    constructor(layouts = []) {
        super();
        layouts.forEach(layout => {
            if (this.hasKey(layout.layoutKind)) {
                this.logger.warn('Layout kind is already defined: ', layout.layoutKind);
            }
            else {
                this.register(layout.layoutKind, layout.factory());
            }
        });
    }
};
exports.LayoutRegistry = LayoutRegistry;
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.ILogger),
    __metadata("design:type", Object)
], LayoutRegistry.prototype, "logger", void 0);
exports.LayoutRegistry = LayoutRegistry = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(sprotty_1.TYPES.LayoutRegistration)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], LayoutRegistry);
function configureLayout(context, kind, constr) {
    return (0, sprotty_1.configureLayout)(context, kind, constr);
}
let AbstractLayout = class AbstractLayout extends abstract_layout_1.AbstractLayout {
    constructor() {
        super(...arguments);
        this.orderAgnostic = true;
    }
};
exports.AbstractLayout = AbstractLayout;
exports.AbstractLayout = AbstractLayout = __decorate([
    (0, inversify_1.injectable)()
], AbstractLayout);
let VBoxLayouter = class VBoxLayouter extends sprotty_1.VBoxLayouter {
    constructor() {
        super(...arguments);
        this.orderAgnostic = false;
    }
};
exports.VBoxLayouter = VBoxLayouter;
exports.VBoxLayouter = VBoxLayouter = __decorate([
    (0, inversify_1.injectable)()
], VBoxLayouter);
let HBoxLayouter = class HBoxLayouter extends sprotty_1.HBoxLayouter {
    constructor() {
        super(...arguments);
        this.orderAgnostic = false;
    }
};
exports.HBoxLayouter = HBoxLayouter;
exports.HBoxLayouter = HBoxLayouter = __decorate([
    (0, inversify_1.injectable)()
], HBoxLayouter);
//# sourceMappingURL=layout-override.js.map