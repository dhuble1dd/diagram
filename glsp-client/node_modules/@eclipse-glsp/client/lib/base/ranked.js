"use strict";
/********************************************************************************
 * Copyright (c) 2019-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ranked = void 0;
const sprotty_1 = require("@eclipse-glsp/sprotty");
var Ranked;
(function (Ranked) {
    Ranked.DEFAULT_RANK = 0;
    function is(object) {
        return sprotty_1.AnyObject.is(object) && (0, sprotty_1.hasNumberProp)(object, 'rank');
    }
    Ranked.is = is;
    /**
     * Tries to retrieve the rank form the given object. If the object
     * implements the {@link Ranked} interface the corresponding rank is returned
     * otherwise the {@link DEFAULT_RANK} is returned.
     * @param object
     */
    function getRank(object) {
        return is(object) ? object.rank : Ranked.DEFAULT_RANK;
    }
    Ranked.getRank = getRank;
    /** Sort function for lowest rank first. */
    Ranked.sortAsc = (left, right) => getRank(left) - getRank(right);
    /** Sort function for highest rank first. */
    Ranked.sortDesc = (left, right) => getRank(right) - getRank(left);
    /** Default sort function for rank: Lowest rank first */
    Ranked.sort = Ranked.sortAsc;
})(Ranked || (exports.Ranked = Ranked = {}));
//# sourceMappingURL=ranked.js.map