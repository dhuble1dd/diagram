"use strict";
/********************************************************************************
 * Copyright (c) 2023-2025 Axon Ivy AG and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.gridModule = void 0;
const sprotty_1 = require("@eclipse-glsp/sprotty");
require("../../../css/grid.css");
const grid_1 = require("./grid");
const grid_manager_1 = require("./grid-manager");
const grid_model_1 = require("./grid-model");
const grid_snapper_1 = require("./grid-snapper");
exports.gridModule = new sprotty_1.FeatureModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    bind(sprotty_1.TYPES.Grid).toConstantValue(grid_1.Grid.DEFAULT);
    (0, sprotty_1.configureCommand)(context, grid_model_1.ShowGridCommand);
    (0, sprotty_1.bindAsService)(context, sprotty_1.TYPES.IGridManager, grid_manager_1.GridManager);
    (0, sprotty_1.configureActionHandler)(context, grid_model_1.ShowGridAction.KIND, grid_manager_1.GridManager);
    bind(sprotty_1.TYPES.ISnapper).to(grid_snapper_1.GridSnapper);
}, { featureId: Symbol('grid') });
//# sourceMappingURL=grid-module.js.map