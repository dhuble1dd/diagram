"use strict";
/********************************************************************************
 * Copyright (c) 2023-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.helperLineModule = void 0;
const sprotty_1 = require("@eclipse-glsp/sprotty");
const set_bounds_feedback_command_1 = require("../bounds/set-bounds-feedback-command");
const change_bounds_tool_feedback_1 = require("../tools/change-bounds/change-bounds-tool-feedback");
const helper_line_feedback_1 = require("./helper-line-feedback");
const helper_line_manager_1 = require("./helper-line-manager");
const model_1 = require("./model");
const view_1 = require("./view");
exports.helperLineModule = new sprotty_1.FeatureModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    (0, sprotty_1.configureModelElement)(context, model_1.HELPER_LINE, model_1.HelperLine, view_1.HelperLineView);
    (0, sprotty_1.configureModelElement)(context, model_1.SELECTION_BOUNDS, model_1.SelectionBounds, view_1.SelectionBoundsView);
    (0, sprotty_1.configureCommand)(context, helper_line_feedback_1.DrawHelperLinesFeedbackCommand);
    (0, sprotty_1.configureCommand)(context, helper_line_feedback_1.RemoveHelperLinesFeedbackCommand);
    (0, sprotty_1.bindAsService)(bind, sprotty_1.TYPES.IHelperLineManager, helper_line_manager_1.HelperLineManager);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.SetBoundsAction.KIND, sprotty_1.TYPES.IHelperLineManager);
    (0, sprotty_1.configureActionHandler)(context, set_bounds_feedback_command_1.SetBoundsFeedbackAction.KIND, sprotty_1.TYPES.IHelperLineManager);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.MoveAction.KIND, sprotty_1.TYPES.IHelperLineManager);
    (0, sprotty_1.configureActionHandler)(context, change_bounds_tool_feedback_1.MoveInitializedEventAction.KIND, sprotty_1.TYPES.IHelperLineManager);
    (0, sprotty_1.configureActionHandler)(context, change_bounds_tool_feedback_1.MoveFinishedEventAction.KIND, sprotty_1.TYPES.IHelperLineManager);
}, { featureId: Symbol('helperLine') });
//# sourceMappingURL=helper-line-module.js.map