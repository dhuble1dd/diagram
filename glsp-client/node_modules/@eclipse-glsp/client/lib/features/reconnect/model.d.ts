/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { GModelElement, GRoutableElement, GRoutingHandle, RoutingHandleKind } from '@eclipse-glsp/sprotty';
export declare const reconnectFeature: unique symbol;
/**
 * Feature extension interface for {@link reconnectFeature}.
 */
export interface Reconnectable {
}
export declare function isReconnectable(element: GModelElement): element is GRoutableElement & Reconnectable;
export declare function isReconnectHandle(element: GModelElement | undefined): element is GReconnectHandle;
export declare function addReconnectHandles(element: GRoutableElement): void;
export declare function removeReconnectHandles(element: GRoutableElement): void;
export declare function isSourceRoutingHandle(edge: GRoutableElement, routingHandle: GReconnectHandle): boolean;
export declare function isTargetRoutingHandle(edge: GRoutableElement, routingHandle: GReconnectHandle): boolean;
export declare function createReconnectHandle(edge: GRoutableElement, kind: RoutingHandleKind, routingPointIndex: number): GReconnectHandle;
export declare class GReconnectHandle extends GRoutingHandle {
    hasFeature(feature: symbol): boolean;
}
//# sourceMappingURL=model.d.ts.map