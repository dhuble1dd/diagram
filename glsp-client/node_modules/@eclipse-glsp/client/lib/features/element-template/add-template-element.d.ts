/********************************************************************************
 * Copyright (c) 2023-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Action, CommandExecutionContext, CommandResult, ElementTemplate, GChildElement, GModelElementSchema, IActionDispatcher } from '@eclipse-glsp/sprotty';
import { FeedbackCommand } from '../../base/feedback/feedback-command';
export interface AddTemplateElementsAction extends Action {
    kind: typeof AddTemplateElementsAction.KIND;
    templates: ElementTemplate[];
    addClasses?: string[];
    removeClasses?: string[];
}
export declare namespace AddTemplateElementsAction {
    const KIND = "addTemplateElements";
    function create(options: Omit<AddTemplateElementsAction, 'kind'>): AddTemplateElementsAction;
}
export declare function getTemplateElementId(template: ElementTemplate): string;
export declare class AddTemplateElementsFeedbackCommand extends FeedbackCommand {
    readonly action: AddTemplateElementsAction;
    static readonly KIND = "addTemplateElements";
    protected actionDispatcher: IActionDispatcher;
    constructor(action: AddTemplateElementsAction);
    execute(context: CommandExecutionContext): CommandResult;
    protected applyRootCssClasses(element: GChildElement, addClasses?: string[], removeClasses?: string[]): GChildElement;
}
export declare function templateToSchema(template: ElementTemplate, context: CommandExecutionContext): GModelElementSchema | undefined;
//# sourceMappingURL=add-template-element.d.ts.map