"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.standaloneExportModule = exports.exportModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = require("@eclipse-glsp/sprotty");
const export_svg_action_handler_1 = require("./export-svg-action-handler");
const glsp_svg_exporter_1 = require("./glsp-svg-exporter");
exports.exportModule = new sprotty_1.FeatureModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, sprotty_1.bindAsService)(context, sprotty_1.TYPES.HiddenVNodePostprocessor, sprotty_1.ExportSvgPostprocessor);
    (0, sprotty_1.configureCommand)(context, sprotty_1.ExportSvgCommand);
    bind(sprotty_1.TYPES.SvgExporter).to(glsp_svg_exporter_1.GLSPSvgExporter).inSingletonScope();
}, { featureId: Symbol('export') });
/**
 * Feature module that is intended for the standalone deployment of GLSP (i.e. plain webapp)
 * When integrated into an application frame (e.g Theia/VS Code) this module is typically omitted and/or replaced
 * with an application native module.
 */
exports.standaloneExportModule = new sprotty_1.FeatureModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, sprotty_1.bindAsService)(context, sprotty_1.TYPES.KeyListener, sprotty_1.ExportSvgKeyListener);
    bind(export_svg_action_handler_1.ExportSvgActionHandler).toSelf().inSingletonScope();
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.ExportSvgAction.KIND, export_svg_action_handler_1.ExportSvgActionHandler);
}, { featureId: Symbol('standaloneExport'), requires: exports.exportModule });
//# sourceMappingURL=export-modules.js.map