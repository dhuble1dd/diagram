/********************************************************************************
 * Copyright (c) 2019-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Action, CommandExecutionContext, CommandReturn } from '@eclipse-glsp/sprotty';
import { FeedbackCommand } from '../../../base/feedback/feedback-command';
import { ResizeHandleLocation } from '../../change-bounds/model';
import { IChangeBoundsManager } from './change-bounds-manager';
export interface ShowChangeBoundsToolResizeFeedbackAction extends Action {
    kind: typeof ShowChangeBoundsToolResizeFeedbackAction.KIND;
    elementId: string;
    resizeLocations?: ResizeHandleLocation[];
}
export declare namespace ShowChangeBoundsToolResizeFeedbackAction {
    const KIND = "showChangeBoundsToolResizeFeedback";
    function is(object: any): object is ShowChangeBoundsToolResizeFeedbackAction;
    /** @deprecated Use the create method with the options object parameter instead and set the 'elementId' parameter. */
    function create(elementId: string): ShowChangeBoundsToolResizeFeedbackAction;
    function create(options: Omit<ShowChangeBoundsToolResizeFeedbackAction, 'kind'>): ShowChangeBoundsToolResizeFeedbackAction;
}
export interface HideChangeBoundsToolResizeFeedbackAction extends Action {
    kind: typeof HideChangeBoundsToolResizeFeedbackAction.KIND;
}
export declare namespace HideChangeBoundsToolResizeFeedbackAction {
    const KIND = "hideChangeBoundsToolResizeFeedback";
    function is(object: any): object is HideChangeBoundsToolResizeFeedbackAction;
    function create(): HideChangeBoundsToolResizeFeedbackAction;
}
export declare class ShowChangeBoundsToolResizeFeedbackCommand extends FeedbackCommand {
    static readonly KIND = "showChangeBoundsToolResizeFeedback";
    protected action: ShowChangeBoundsToolResizeFeedbackAction;
    protected changeBoundsManager: IChangeBoundsManager;
    execute(context: CommandExecutionContext): CommandReturn;
}
export declare class HideChangeBoundsToolResizeFeedbackCommand extends FeedbackCommand {
    static readonly KIND = "hideChangeBoundsToolResizeFeedback";
    protected action: HideChangeBoundsToolResizeFeedbackAction;
    execute(context: CommandExecutionContext): CommandReturn;
}
export interface MoveInitializedEventAction extends Action {
    kind: typeof MoveInitializedEventAction.KIND;
}
export declare namespace MoveInitializedEventAction {
    const KIND = "move-initialized-event";
    function is(object: any): object is MoveInitializedEventAction;
    function create(): MoveInitializedEventAction;
}
export interface MoveFinishedEventAction extends Action {
    kind: typeof MoveFinishedEventAction.KIND;
}
export declare namespace MoveFinishedEventAction {
    const KIND = "move-finished-event";
    function is(object: any): object is MoveFinishedEventAction;
    function create(): MoveFinishedEventAction;
}
//# sourceMappingURL=change-bounds-tool-feedback.d.ts.map