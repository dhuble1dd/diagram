/********************************************************************************
 * Copyright (c) 2024-2025 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Action, GModelElement, KeyListener } from '@eclipse-glsp/sprotty';
import { SelectionService } from '../../base/selection-service';
import { IChangeBoundsManager } from '../tools/change-bounds/change-bounds-manager';
export declare class MoveViewportKeyListener extends KeyListener {
    protected readonly selectionService: SelectionService;
    protected readonly changeBoundsManager: IChangeBoundsManager;
    protected readonly grid: import("@eclipse-glsp/sprotty").Point;
    keyDown(_element: GModelElement, event: KeyboardEvent): Action[];
    protected matchesMoveUpKeystroke(event: KeyboardEvent): boolean;
    protected matchesMoveDownKeystroke(event: KeyboardEvent): boolean;
    protected matchesMoveRightKeystroke(event: KeyboardEvent): boolean;
    protected matchesMoveLeftKeystroke(event: KeyboardEvent): boolean;
}
export declare class ZoomKeyListener extends KeyListener {
    protected readonly selectionService: SelectionService;
    keyDown(element: GModelElement, event: KeyboardEvent): Action[];
    protected matchesZoomInKeystroke(event: KeyboardEvent): boolean;
    protected matchesMinZoomLevelKeystroke(event: KeyboardEvent): boolean;
    protected matchesZoomOutKeystroke(event: KeyboardEvent): boolean;
}
//# sourceMappingURL=viewport-key-listener.d.ts.map