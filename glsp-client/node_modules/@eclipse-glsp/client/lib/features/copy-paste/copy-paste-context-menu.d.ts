import { Action, IActionDispatcher, IActionHandler, IContextMenuItemProvider, MenuItem, Point, GModelRoot } from '@eclipse-glsp/sprotty';
/**
 * An `InvokeCopyPasteAction` is dispatched by the client to initiate a cut, copy or paste operation.
 */
export interface InvokeCopyPasteAction extends Action {
    kind: typeof InvokeCopyPasteAction.KIND;
    command: 'copy' | 'cut' | 'paste';
}
export declare namespace InvokeCopyPasteAction {
    const KIND = "invokeCopyPaste";
    function is(object: any): object is InvokeCopyPasteAction;
    function create(command: 'copy' | 'cut' | 'paste'): InvokeCopyPasteAction;
}
export declare class InvokeCopyPasteActionHandler implements IActionHandler {
    protected dispatcher: IActionDispatcher;
    handle(action: InvokeCopyPasteAction): void;
    protected notifyUserToUseShortcut(operation: string): void;
}
export declare class CopyPasteContextMenuItemProvider implements IContextMenuItemProvider {
    getItems(root: Readonly<GModelRoot>, _lastMousePosition?: Point): Promise<MenuItem[]>;
    protected createPasteMenuItem(): MenuItem;
    protected createCutMenuItem(hasSelectedElements: boolean): MenuItem;
    protected createCopyMenuItem(hasSelectedElements: boolean): MenuItem;
}
export declare function supportsCopy(): boolean;
export declare function supportsCut(): boolean;
export declare function supportsPaste(): boolean;
export declare function isNative(): boolean;
//# sourceMappingURL=copy-paste-context-menu.d.ts.map