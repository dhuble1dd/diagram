/********************************************************************************
 * Copyright (c) 2023-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { GModelElement, ISnapper, Point } from '@eclipse-glsp/sprotty';
import { IHelperLineManager } from '../helper-lines/helper-line-manager';
import { Direction } from '../helper-lines/model';
/**
 * @deprecated The use of this class is discouraged. Use the {@link ChangeBoundsManager.createTracker}
 * instead which centralized a few aspects of the tracking.
 */
export declare class PositionSnapper {
    protected snapper?: ISnapper | undefined;
    protected helperLineManager?: IHelperLineManager | undefined;
    constructor(snapper?: ISnapper | undefined, helperLineManager?: IHelperLineManager | undefined);
    snapPosition(position: Point, element: GModelElement, isSnap?: boolean): Point;
    snapDelta(positionDelta: Point, element: GModelElement, isSnap: boolean, directions: Direction[]): Point;
    protected getMinimumDelta(target: GModelElement, isSnap: boolean, directions: Direction[]): Point | undefined;
    protected getHelperLineMinimum(target: GModelElement, isSnap: boolean, directions: Direction[]): Point | undefined;
}
//# sourceMappingURL=position-snapper.d.ts.map