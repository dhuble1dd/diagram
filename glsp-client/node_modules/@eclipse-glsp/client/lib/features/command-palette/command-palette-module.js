"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.commandPaletteModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = require("@eclipse-glsp/sprotty");
require("../../../css/command-palette.css");
const command_palette_1 = require("./command-palette");
const command_palette_tool_1 = require("./command-palette-tool");
const server_command_palette_provider_1 = require("./server-command-palette-provider");
exports.commandPaletteModule = new sprotty_1.FeatureModule(bind => {
    (0, sprotty_1.bindAsService)(bind, sprotty_1.TYPES.IUIExtension, command_palette_1.GlspCommandPalette);
    bind(sprotty_1.TYPES.ICommandPaletteActionProviderRegistry).to(sprotty_1.CommandPaletteActionProviderRegistry).inSingletonScope();
    (0, sprotty_1.bindAsService)(bind, sprotty_1.TYPES.ICommandPaletteActionProvider, server_command_palette_provider_1.ServerCommandPaletteActionProvider);
    (0, sprotty_1.bindAsService)(bind, sprotty_1.TYPES.IDefaultTool, command_palette_tool_1.CommandPaletteTool);
}, { featureId: Symbol('commandPalette') });
//# sourceMappingURL=command-palette-module.js.map