/********************************************************************************
 * Copyright (c) 2023-2024 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { IActionDispatcher } from '@eclipse-glsp/sprotty';
import { KeyboardPointer } from './keyboard-pointer';
import { KeyboardPointerPosition } from './keyboard-pointer-position';
/**
 * Keyboard listener for the pointer with the necessary logic to handle keyboard events
 */
export declare class KeyboardPointerKeyboardListener {
    protected readonly keyboardPointer: KeyboardPointer;
    protected readonly actionDispatcher: IActionDispatcher;
    protected get position(): KeyboardPointerPosition;
    constructor(keyboardPointer: KeyboardPointer, actionDispatcher: IActionDispatcher);
    keyDown(event: KeyboardEvent): void;
    protected moveIfArrows(event: KeyboardEvent): any;
    protected createIfEnterEvent(event: KeyboardEvent): any;
    protected hideIfEscapeEvent(event: KeyboardEvent): any;
    protected matchesDeactivatePointer(event: KeyboardEvent): boolean;
    protected matchesConfirmPointerPosition(event: KeyboardEvent): boolean;
    protected matchesConfirmPointerPositionAndStayInMode(event: KeyboardEvent): boolean;
    protected matchesMovePointerLeft(event: KeyboardEvent): boolean;
    protected matchesMovePointerRight(event: KeyboardEvent): boolean;
    protected matchesMovePointerUp(event: KeyboardEvent): boolean;
    protected matchesMovePointerDown(event: KeyboardEvent): boolean;
}
//# sourceMappingURL=keyboard-pointer-listener.d.ts.map