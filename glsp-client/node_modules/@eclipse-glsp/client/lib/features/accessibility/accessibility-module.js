"use strict";
/********************************************************************************
 * Copyright (c) 2023-2025 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.accessibilityModule = void 0;
const sprotty_1 = require("@eclipse-glsp/sprotty");
const element_navigation_module_1 = require("./element-navigation/element-navigation-module");
const focus_tracker_module_1 = require("./focus-tracker/focus-tracker-module");
const keyboard_pointer_module_1 = require("./keyboard-pointer/keyboard-pointer-module");
const keyboard_tool_palette_module_1 = require("./keyboard-tool-palette/keyboard-tool-palette-module");
const search_palette_module_1 = require("./search/search-palette-module");
const toast_module_1 = require("./toast/toast-module");
const view_key_tools_module_1 = require("./view-key-tools/view-key-tools-module");
/**
 * Enables the accessibility tools for a keyboard-only-usage
 */
exports.accessibilityModule = new sprotty_1.FeatureModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    (0, view_key_tools_module_1.configureViewKeyTools)(context);
    (0, search_palette_module_1.configureSearchPaletteModule)(context);
    (0, keyboard_tool_palette_module_1.configureKeyboardToolPaletteTool)(context);
    (0, keyboard_pointer_module_1.configureKeyboardControlTools)(context);
    (0, element_navigation_module_1.configureElementNavigationTool)(context);
    (0, focus_tracker_module_1.configureFocusTrackerTool)(context);
    (0, toast_module_1.configureToastTool)(context);
}, {
    featureId: Symbol('accessibility')
});
//# sourceMappingURL=accessibility-module.js.map