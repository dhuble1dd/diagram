"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLSPWebWorkerProvider = void 0;
/********************************************************************************
 * Copyright (c) 2023-2024 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const browser_1 = require("vscode-jsonrpc/browser");
class GLSPWebWorkerProvider {
    constructor(url) {
        this.url = url;
    }
    createWebWorker(url) {
        return new Worker(url);
    }
    listen(handler) {
        var _a, _b;
        this.worker = this.createWebWorker(this.url);
        const wwConnection = (0, browser_1.createMessageConnection)(new browser_1.BrowserMessageReader(this.worker), new browser_1.BrowserMessageWriter(this.worker));
        (_a = handler.logger) === null || _a === void 0 ? void 0 : _a.warn('GLSPWebWorkerProvider Initializing!');
        (_b = handler.onConnection) === null || _b === void 0 ? void 0 : _b.call(handler, wwConnection);
        return wwConnection;
    }
}
exports.GLSPWebWorkerProvider = GLSPWebWorkerProvider;
//# sourceMappingURL=worker-connection-provider.js.map